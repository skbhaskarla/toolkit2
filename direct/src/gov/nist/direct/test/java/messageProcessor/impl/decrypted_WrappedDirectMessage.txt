Content-Type: multipart/signed; protocol="application/pkcs7-signature"; micalg=sha-1; 
	boundary="----=_Part_8_678984726.1358194782753"

------=_Part_8_678984726.1358194782753
Content-Type: message/rfc822

Date: Mon, 14 Jan 2013 15:19:42 -0500 (EST)
From: testFrom@test.com
To: testTo@test.com
Message-ID: <2091197094.6.1358194782752.JavaMail.jnp3@P850138>
Subject: Test Wrapped Message
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_5_2136875125.1358194782749"

------=_Part_5_2136875125.1358194782749
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Test Wrapped Message
------=_Part_5_2136875125.1358194782749
Content-Type: text/xml; name=CCDA_CCD_b1_Ambulatory.xml
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename=CCDA_CCD_b1_Ambulatory.xml


------=_Part_5_2136875125.1358194782749--

------=_Part_8_678984726.1358194782753
Content-Type: application/pkcs7-signature; name=smime.p7s; smime-type=signed-data
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="smime.p7s"
Content-Description: S/MIME Cryptographic Signature

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
kHcop1zot8d+g0gR1O6L/fc3AAAAAAAA
------=_Part_8_678984726.1358194782753--
