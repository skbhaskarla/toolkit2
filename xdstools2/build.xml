<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="tkbuild" name="xdstools2">

	<!-- outside dependencies -->
	<property name="xdstest2.dir" location="../xdstest2" />
	
	<!-- define the repositories needed to build the war -->
	<property name="war.toolkitx.dir" location="war/toolkitx" />
	<property name="war.testkit.dir" location="${war.toolkitx.dir}/testkit" />
	<property name="sessionCache" location="war/SessionCache" />
	<property name="xdstest" location="war/toolkitx/xdstest" />

	<!-- the compile target is  the same for all projects and is defined here -->
	<import file="../build-common.xml" />

	<!-- delegates to  -->
	<target name="update-collections">
		<ant dir="${xdstest2.dir}" antfile="build.xml" target="testkit.collections" inheritAll="true" inheritRefs="true"/>
	</target>
	
	<target name="war" depends="war-prep, gwt-compile">
		<jar destfile="war.war">
			<fileset dir="war" >
				<exclude name="**/groovy*.jar"/>
				<exclude name="**/rampart*"/>
				<exclude name="**/rahas*"/>
				<exclude name="**/postgres*.jar"/>
				<exclude name="**/*saml*.jar"/>
				<exclude name="**/*servlet-api.jar"/>
				<exclude name="**/gwt-user.jar"/>
				<exclude name="**/gwt-dev.jar"/>
				<exclude name="**/uniqueid_*.txt"/>
			</fileset>
		</jar>
	</target>
	
	<!-- invoke the GWT compiler to generate the javascript.
	The compiler expects a war folder to exists and add folders and files to it.
	 -->
	<target name="gwt-compile">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<pathelement location="${build.dir}" />
				<!-- src dirs are added to ensure that gwt module.xml file(s) are on the classpath. -->
				<pathelement location="${xdstools2.src.dir}" />	
				<pathelement location="${sim-common.src.dir}" />
				<pathelement location="${xdstest-gui.src.dir}" />
				<pathelement location="${testengine.src.dir}" />
				<pathelement location="${site-management.src.dir}" />
				<pathelement location="${validators-support.src.dir}" />
				<pathelement location="${registry-msg-formats.src.dir}" />
				<pathelement location="${error-recording.src.dir}" />
				<pathelement location="${registry-metadata.src.dir}" />
				<pathelement location="${common-datatypes.src.dir}" />
				<pathelement location="${actor-transaction.src.dir}" />
				<pathelement location="${direct-sim.src.dir}" />
				<pathelement location="${tk.src.dir}" />
				<pathelement location="${results.src.dir}" />
				<pathelement location="${actorfactory.src.dir}" />
				<path refid="classpath" />
			</classpath>
			<jvmarg value="-Xmx256M" />
			<!-- define the entry point to the application -->
			<arg value="gov.nist.toolkit.xdstools2.Xdstools2" />
		</java>
	</target>

	<target name="war-prep" depends="assemble, install-cert, include-jars-in-war, doc">
		<copy file="build.num" todir="war" overwrite="yes"/>
		<mkdir dir="${war.dir}" />
		<mkdir dir="${war.lib.dir}" />
		<!-- TODO check : why do we put them there ? -->
		<mkdir dir="war/WEB-INF/classes"/>
		<copy file="log4j.properties" todir="war/WEB-INF/classes" overwrite="yes"/>
		<copy file="schematron.properties" todir="war/WEB-INF/classes" overwrite="yes"/>
		<mkdir dir="war/DirectValidationReports"/>
	</target>
	
	<target name="assemble" >
			<mkdir dir="${war.toolkitx.dir}/admin"/>
			<copy todir="${war.toolkitx.dir}/admin">
				<fileset file="${testkit.dir}/admin/version">
					<exclude name="**/.svn"/>
				</fileset>
			</copy>
			<copy todir="${war.testkit.dir}/tests">
				<fileset dir="${testkit.dir}/tests">
					<exclude name="**/.svn"/>
				</fileset>
			</copy>
			<copy todir="${war.testkit.dir}/tests">
				<fileset dir="${testkit.dir}/examples">
					<exclude name="**/.svn"/>
				</fileset>
			</copy>
			<mkdir dir="${war.testkit.dir}/xcpd"/>
			<copy todir="${war.testkit.dir}/xcpd">
				<fileset dir="${testkit.dir}/xcpd">
					<exclude name="**/.svn"/>
				</fileset>
			</copy>
			<copy todir="${war.testkit.dir}/testdata">
				<fileset dir="${testkit.dir}/testdata">
					<exclude name="**/.svn"/>
				</fileset>
			</copy>

			<copy file="actors.xml" tofile="war/toolkitx/xdstest/actors.xml"/>

			<!-- the target names match the ActorType short names found
			     in ATFactory.java-->
			<copy file="${testkit.dir}/collections/registryb.tc" 
				tofile="${war.testkit.dir}/actorcollections/reg.tc"/>
			<copy file="${testkit.dir}/collections/repositoryb.tc" 
				tofile="${war.testkit.dir}/actorcollections/rep.tc"/>
			<copy file="${testkit.dir}/collections/update.tc" 
				tofile="${war.testkit.dir}/actorcollections/update.tc"/>
			<copy file="${testkit.dir}/collections/Document_Recipient.tc" 
				tofile="${war.testkit.dir}/actorcollections/rec.tc"/>
			<copy file="${testkit.dir}/collections/RG.tc" 
				tofile="${war.testkit.dir}/actorcollections/rg.tc"/>

			<copy todir="war/toolkitx/xdstest/rampart/client_repositories/modules" file="${shared.mar.dir}/addressing-1.5.4.mar"/>

			<mkdir dir="${sessionCache}"/>
			<mkdir dir="war/xdstools2/DocumentCache" />

			<mkdir dir="war/WEB-INF/direct/mailer"/>


			<copy todir="war/WEB-INF" file="../tk_props_default.txt"/>
		</target>

	<target name="install-cert">
		<mkdir dir="war/pubcert"/>
		<copy file="cert/mycert" tofile="war/pubcert/ttt_pem.txt" overwrite="yes"/>
		<copy file="cert/hit-testing.nist.gov.der" tofile="war/pubcert/hit-testing.nist.gov.der" overwrite="yes"/>
		<mkdir dir="war/WEB-INF/privcert"/>
		<copy file="cert/mykeystore.p12" todir="war/WEB-INF/privcert" overwrite="yes"/>
	</target>

	<!-- copy all runtime libs to the war -->
	<target name="include-jars-in-war">
		<copy includeemptydirs="false" overwrite="false"
		     todir="${war.lib.dir}">
			<fileset dir="${lib.dir}">
				<exclude name="gwt-user.jar"/>
				<exclude name="gwt-dev.jar"/>  
			</fileset>
			<!-- we might want to remove mention the an outside directory -->
			<fileset dir="${shared.mar.dir}">
				<include name="*.mar"/>
			</fileset>
		</copy>
	</target>
	
	<target name="doc">
		<mkdir dir="war/doc"/>
		<copy todir="war/doc">
			<fileset dir="doc"/>
		</copy>
	</target>
	
	
	<target name="clean" depends="clean-cert, clean-war">
		<delete dir="war/WEB-INF/classes"/>
		<delete dir="war/WEB-INF/lib"/>
		<delete file="ttt.war" failonerror="no"/>
		<delete file="xdstools2.war" failonerror="no"/>
		<delete file="listener.jar" failonerror="no"/>
	</target>

	<target name="clean-war">
		<delete dir="war/toolkitx/admin" failonerror="false"/>

		<delete dir="war/xdstools2" failonerror="false"/>

		<delete file="war/toolkitx/xdstest/rampart/client_repositories/modules/addressing-1.5.4.mar" failonerror="false"/>
		<delete dir="war/WEB-INF/classes" failonerror="false"/>
		<delete dir="war/WEB-INF/lib" failonerror="false"/>

		<delete failonerror="false">
			<fileset dir="${war.testkit.tests}">
				<include name="**/**/*"/>
				<include name="**/*"/>
				<include name="**"/>
				<include name="*"/>
			</fileset>
		</delete>

		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${war.testkit.tests}" includes="**/*"/>
		</delete>

		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="gwt-unitCache"/>
		</delete>

		<delete dir="${localtestdata}" failonerror="false"/>

		<delete dir="war/SessionCache" failonerror="false"/>
		<delete dir="war/WEB-INF/deploy" failonerror="false"/>

		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${actorcollections}" includes="**/*.tc"/>
		</delete>

		<delete file="xdstools2.war"  failonerror="false"/>
		<delete file="${xdstest}/uniqueid_base.txt"  failonerror="false"/>
		<delete file="${xdstest}/uniqueid_incr.txt"  failonerror="false"/>
		<delete file="war/toolkitx/codes/codes.xml"  failonerror="false"/>

		<delete dir="war/DirectValidationReports"/>

		<delete dir="war/WEB-INF/direct/mailer"/>
		<delete dir="war/doc"/>
	</target>
	
	
	<target name="clean-cert">
		<delete dir="war/pubcert"/>
		<delete dir="war/WEB-INF/privcert"/>
	</target>
	
	
	<target name="ihe" depends="war-prep, ihe-config, war">
			<move file="war.war" tofile="xdstools2.war"/>
		</target>

		<target name="ttt" depends="war-prep, listener, ttt-config, war">
			<move file="war.war" tofile="ttt.war"/>
		</target>

		<target name="ihe-config">
			<copy file="war/WEB-INF/toolkit.properties.ihe" 
				tofile="war/WEB-INF/toolkit.properties" overwrite="yes"/>
		</target>

		<target name="ttt-config">
			<copy file="war/WEB-INF/toolkit.properties.ttt" 
				tofile="war/WEB-INF/toolkit.properties" overwrite="yes"/>
		</target>

		<target name="tkbuild" depends="war-prep, ihe-config, compile"/>

		<target name="hit-testing" depends="ttt, listener"/>

		<target name="listener" depends="war-prep">
			<delete file="listener.jar" />

			<jar destfile="listener.jar">
				<fileset dir="war/WEB-INF" >
					<include name="**/classes/**/*.class"/>
					<include name="**/classes/**/*.properties"/>
					<include name="**/*.p12"/>
					<include name="**/lib/*"/>
					<exclude name="**/*.jar"/>
					<exclude name="**/uniqueid_*.txt"/>
				</fileset>
			</jar>
			
		</target>


</project>
