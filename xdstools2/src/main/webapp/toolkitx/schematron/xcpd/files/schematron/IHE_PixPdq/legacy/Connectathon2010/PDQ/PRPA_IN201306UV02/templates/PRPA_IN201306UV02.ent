<!-- These schematron rules validate an PixV3 message Patient Registry Find Candidates Query Response PRPA_IN201306UV02 -->
<!-- The following rules are in accordance with IHE IT Technical Framework Supplement 2009-2010  
      Patient Identifier Cross-Reference HL7 V3 (PIXV3) and Patient Demographic Query HL7 V3 (PDQV3) August 10, 2009. -->


<pattern id='PRPA_IN201306UV02-errors'>

 <rule context='/msg:PRPA_IN201306UV02'>
  
   <assert test='msg:interactionId/@extension="PRPA_IN201306UV02"'>Error: the attribute PRPA_IN201306UV02/interactionId/@extension shall equal PRPA_IN201306UV02.</assert>
   <!-- assert test='msg:processingCode/@code="T"'>Error: The attribute PRPA_IN201306UV02/processingCode/@code shall be set to T.</assert -->
   <assert test='msg:processingModeCode/@code="T"'>Error: The attribute PRPA_IN201306UV02/processingModeCode/@code shall be set to T.</assert>
   <assert test='msg:acceptAckCode/@code="NE"'>Error: The attribute PRPA_IN201306UV02/acceptAckCode/@code shall be set to NE.</assert>
   <assert test='count(msg:receiver) = 1'>Error: The shall be 1 element PRPA_IN201306UV02/receiver.</assert>
 </rule> 
  
 <rule context='/msg:PRPA_IN201306UV02/msg:controlActProcess'>
   <assert test='@moodCode="ENV"'>Error: The controlActProcess/@moodCode shall be set to "ENV".</assert>
   <assert test='msg:code'>Error: The element PRPA_IN201306UV02/controlActProcess/Code shall be present.</assert>
   <assert test='msg:code/@code="PRPA_TE201306UV02UV"'>Error: The attribute PRPA_IN201306UV02/controlActProcess/Code/@code shall have the trigger event code value PRPA_TE201306UV02.</assert> 
   <assert test='not(msg:authorOrPerformer) or msg:authorOrPerformer[@typeCode="AUT"]'>Error: The controlActProcess/authorOrPerformer/@typeCode shall be set to "AUT".</assert>
   <assert test='msg:queryAck/msg:resultTotalQuantity'>Error: The controlProcess/queryAck/resultTotalQuantity shall be present and populated with the appropriate values.</assert>
   <assert test='msg:queryAck/msg:resultCurrentQuantity'>Error: The controlProcess/queryAck/resultCurrentQuantity shall be present and populated with the appropriate values.</assert>
   <assert test='msg:queryAck/msg:resultRemainingQuantity'>Error: The controlProcess/queryAck/resultRemainingQuantity shall be present and populated with the appropriate values.</assert> 
 </rule>
 
 <rule context='/msg:PRPA_IN201306UV02/msg:controlActProcess/msg:subject/msg:registrationEvent'>
   <assert test='descendant::msg:patient/msg:statusCode[@code="active"]'>Error: The patient/statusCode/@code shall be set to active. This value specifies the state of the record in a patient registry</assert>
   <assert test='descendant::msg:patientPerson[@classCode="PSN"]'>Error: The patientPerson element shall have a classCode attribute equal to "PSN".</assert>
   <assert test='descendant::msg:patientPerson[@determinerCode="INSTANCE"]'>Error: The patientPerson element shall have a determinerCode attribute equal to "INSTANCE".</assert>
   <assert test='not(descendant::msg:patientPerson/msg:asOtherIDs[@classCode="CIT"]) or not(descendant::msg:patientPerson/msg:asOtherIDs[@classCode="EMP"])'>Error: The patientPerson/asOtherIDs element classCode shall not have the value "CIT" for "CITIZEN" or "EMP" for "Employee".</assert>
 </rule>
 </pattern>
 
 <pattern id='PRPA_IN201306UV02-note'>
 
 <rule context='/msg:PRPA_IN201306UV02/msg:controlActProcess'>
   <assert test='not(descendant::msg:patient/msg:patientPerson/msg:asPatientOfOtherProvider)'>Note:The role patient/patientPerson/asPatientOfOtherProvider was omitted.</assert>
   <assert test='not(descendant::msg:patient/msg:patientPerson/msg:birthPlace)'>Note: The role patient/patientPerson/birthPlace  was omitted.</assert>
   <assert test='not(descendant::msg:patient/msg:patientPerson/msg:guardian)'>Note: The role patient/patientPerson/guardian was omitted.</assert>
   <assert test='not(descendant::msg:patient/msg:patientPerson/msg:contactParty)'>Note: The role patient/patientPerson/contactParty was omitted.</assert>
   <assert test='not(descendant::msg:patient/msg:patientPerson/msg:asMember)'>Note: The role patient/patientPerson/asMember was omitted.</assert>
   <assert test='not(descendant::msg:patient/msg:patientPerson/msg:careGiver)'>Note: The role patient/patientPerson/careGiver was omitted.</assert>
   <assert test='not(descendant::msg:patient/msg:patientPerson/msg:asStudent)'>Note: The role patient/patientPerson/asStudent was omitted.</assert>
   <assert test='not(descendant::msg:patient/msg:patientPerson/msg:guarantorRole)'>Note: The role patient/patientPerson/guarantorRole was omitted.</assert>
   <assert test='not(descendant::msg:patient/msg:subjectOf1/msg:administrativeObservation)'>Note: The participant patient/subjectOf1 (administrativeObservation) was omitted.</assert>
   <assert test='not(descendant::msg:patient/msg:coveredPartyOf)'>Note: The participant patient/coveredPartyOf was omitted.</assert> 
 </rule>
 
 <rule context='/msg:PRPA_IN201306UV02/msg:controlActProcess/msg:queryByParameter/msg:parameterList'>      
    <assert test='not(descendant::msg:patientAddress/msg:value) or ((normalize-space(descendant::msg:patientAddress/msg:value) 
       or count(descendant::msg:patientAddress/msg:value/child::*) &gt; 0) or (descendant::msg:patientAddress/msg:value/@nullFlavor))'>
       Note: A patientPerson address should have a non-blank addr element or nullFlavor.
    </assert> 
    <assert test='(descendant::msg:livingSubjectName/msg:value) and (normalize-space(descendant::msg:livingSubjectName/msg:value) 
       or count(descendant::msg:livingSubjectName/msg:value/child::*) > 0)'>
       Note:  The element patientPerson/name element should have a value.
    </assert>  
</rule>
</pattern>
 