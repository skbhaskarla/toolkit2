<!-- These schematron rules validate an PixV3 message Patient Registry Find Candidates Query PRPA_IN201305UV02 -->
<!-- The following rules are in accordance with IHE IT Technical Framework Supplement 2009-2010  
      Patient Identifier Cross-Reference HL7 V3 (PIXV3) and Patient Demographic Query HL7 V3 (PDQV3) August 10, 2009. -->


<pattern id='PRPA_IN201305UV02-errors'>

 <rule context='/msg:PRPA_IN201305UV02'> 
   <assert test='msg:interactionId/@extension="PRPA_IN201305UV02"'>Error: the attribute PRPA_IN201305UV02/interactionId/@extension shall equal PRPA_IN201305UV02.</assert>
   <assert test='msg:processingModeCode/@code="T"'>Error: The attribute PRPA_IN201305UV02/processingModeCode/@code shall be set to T.</assert>
   <assert test='msg:acceptAckCode/@code="AL"'>Error: The attribute PRPA_IN201305UV02/acceptAckCode/@code shall be set to AL.</assert>
   <assert test='count(msg:receiver) = 1'>Error: The shall be 1 element PRPA_IN201305UV02/receiver.</assert>
 </rule> 
  
 <rule context='/msg:PRPA_IN201305UV02/msg:controlActProcess'>
   <assert test='@moodCode="RQO"'>Error: The controlActProcess/@moodCode shall be set to "RQO".</assert>
   <assert test='msg:code'>Error: The element PRPA_IN201305UV02/controlActProcess/Code shall be present.</assert>
   <assert test='msg:code/@code="PRPA_TE201305UV02UV"'>Error: The attribute PRPA_IN201305UV02/controlActProcess/Code/@code shall have the trigger event code value PRPA_TE201305UV02.</assert> 
   <assert test='not(msg:authorOrPerformer) or msg:authorOrPerformer[@typeCode="AUT"]'>Error: The controlActProcess/authorOrPerformer/@typeCode shall be set to "AUT".</assert>
 </rule>
              
 <rule context='/msg:PRPA_IN201305UV02/msg:controlActProcess/msg:queryByParameter'>
   <assert test='msg:statusCode[@code="new"]'>Note: The queryByParameter/statusCode/@code is defaulted to "new".</assert>
   <assert test='msg:responseModalityCode[@code="R"]'>Error: The queryByParameter/responseMolalityCode/@code is required and fixed to "R".</assert>
   <assert test='msg:responsePriorityCode[@code="I"]'>Error: The queryByParameter/responsePriorityCode/@code is required and fixed to "I".</assert> 
 </rule>
 
 <rule context='/msg:PRPA_IN201305UV02/msg:controlActProcess/msg:queryByParameter/msg:matchCriterionList'>
   <assert test='not(msg:id)'>Error: The matchCriterionList/id element shall not be present. It was omitted from the model.</assert>
   <assert test='(msg:matchAlgorithm)'>Error: The matchCriterionList/matchAlgorithm shall be present.</assert>
   <assert test='(msg:matchAlgorithm/msg:value[@xsi:type="ST"])'>
       Error: The matchCriterionList/matchAlgorithm/value is constrained to "ST".</assert>
   <assert test='(msg:minimumDegreeMatch)'>Error: The matchCriterionList/minimumDegreeMatch shall be present.</assert>    
   <assert test='(msg:minimumDegreeMatch/msg:value[@xsi:type="INT"])'>
       Error: The matchCriterionList/minimumDegreeMatch/value is constrained to "INT".</assert> 
 </rule>
 
 <rule context='/msg:PRPA_IN201305UV02/msg:controlActProcess/msg:queryByParameter/msg:parameterList'>   
    <assert test='msg:livingSubjectAdministrativeGender'>Error: The element parameterList/livingSubjectAdministrativeGender shall be present.</assert>
    <assert test='msg:livingSubjectBirthTime'>Error: The element parameterList/livingSubjectBirthTime shall be present. This represents the birth date of the living subject</assert>
    <assert test='msg:livingSubjectId'>Error: The element parameterList/livingSubjectId shall be present. This is a patient idenfitifer used to assist in finding a match for the query.</assert>
    <assert test='msg:livingSubjectName'>Error: The element parameterList/livingSubjectName shall be present.</assert>
    <assert test='msg:livingSubjectName/msg:value[@xsi:type="PN"]'>Error: The element parameterList/livingSubjectName/value/@xsi:type is constrained to "PN".</assert> 
    <assert test='msg:patientAddress'>Error: The element parameterList/patientAddress shall be present.</assert>
    <assert test='msg:patientAddress/msg:value[@xsi:type="AD"]'>Error: The element parameterList/patientAddress/value/@xsi:type shall be "AD".</assert>       
     
    <assert test='not(descendant::msg:patientTelecom)'>Note: The optional parameter queryByParameter/parameterList/patientTelecom was omitted from the model.</assert>  
    <assert test='not(descendant::msg:principalCareProvisionId)'>Note: The optional parameter queryByParameter/parameterList/principalCareProvisionId was omitted from the model.</assert>  
    <assert test='not(descendant::msg:mothersMaidenName)'>Note: The optional parameter queryByParameter/parameterList/mothersMaidenName was omitted from the model.</assert>  
    <assert test='not(descendant::msg:livingSubjectDeceasedTime)'>Note: The optional parameter queryByParameter/parameterList/livingSubjectDeceasedTime was omitted from the model.</assert>  
    <assert test='not(descendant::msg:patientStatusCode)'>Note: The optional parameter queryByParameter/parameterList/patientStatusCode was omitted from the model.</assert>  
    <assert test='not(descendant::msg:livingSubjectBirthPlaceName)'>Note: The optional parameter queryByParameter/parameterList/livingSubjectBirthPlaceName was omitted from the model.</assert>  
    <assert test='not(descendant::msg:livingSubjectBirthPlaceAddress)'>Note: The optional parameter queryByParameter/parameterList/livingSubjectBirthPlaceAddress was omitted from the model.</assert>   
 </rule>
 </pattern>
 
 <pattern id='PRPA_IN201305UV02-note'>
 
 <rule context='/msg:PRPA_IN201305UV02/msg:controlActProcess/msg:queryByParameter'>
    <assert test='not(msg:parameterList/msg:id)'>Note: The optional attribute queryByParameter.parameterList.id  was omitted from the model.</assert>
    <assert test='not(msg:responseElementGroupId)'>Note: The optional attribute queryByParameter.responseElementGroupId was omitted from the model.</assert>
    <assert test='not(msg:modifyCode)'>Note: The optional attribute queryByParameter.modifyCode was omitted from the model.</assert>
    <assert test='not(msg:executionAndDeliveryTime)'>Note: The optional attribute queryByParameter.executionAndDeliveryTime was omitted from the model.</assert>
    <assert test='not(descendant-or-self::*/msg:sortControl)'>Error: The optional sortControl was omitted from the model.</assert> 
    <assert test='not(descendant-or-self::*/msg:matchWeight)'>Error: The optional  matchWeight was omitted from the model.</assert>  
 </rule>
 
 <rule context='/msg:PRPA_IN201305UV02/msg:controlActProcess/msg:queryByParameter/msg:parameterList'>     
    <assert test='not(descendant::msg:patientAddress/msg:value) or ((normalize-space(descendant::msg:patientAddress/msg:value) 
     or count(descendant::msg:patientAddress/msg:value/child::*) &gt; 0) or (descendant::msg:patientAddress/msg:value/@nullFlavor))'>
       Note: A patientPerson address should have a non-blank addr element or nullFlavor.
    </assert>  
    <assert test='(descendant::msg:livingSubjectName/msg:value) and (normalize-space(descendant::msg:livingSubjectName/msg:value) 
       or count(descendant::msg:livingSubjectName/msg:value/child::*) > 0)'>
       Note:  The element patientPerson/name element should have a value.
    </assert> 
    <assert test='not(descendant::msg:patientTelecom)'>Note: The optional parameter queryByParameter/parameterList/patientTelecom was omitted from the model.</assert>  
    <assert test='not(descendant::msg:principalCareProvisionId)'>Note: The optional parameter queryByParameter/parameterList/principalCareProvisionId was omitted from the model.</assert>  
    <assert test='not(descendant::msg:mothersMaidenName)'>Note: The optional parameter queryByParameter/parameterList/mothersMaidenName was omitted from the model.</assert>  
    <assert test='not(descendant::msg:livingSubjectDeceasedTime)'>Note: The optional parameter queryByParameter/parameterList/livingSubjectDeceasedTime was omitted from the model.</assert>  
    <assert test='not(descendant::msg:patientStatusCode)'>Note: The optional parameter queryByParameter/parameterList/patientStatusCode was omitted from the model.</assert>  
    <assert test='not(descendant::msg:livingSubjectBirthPlaceName)'>Note: The optional parameter queryByParameter/parameterList/livingSubjectBirthPlaceName was omitted from the model.</assert>  
    <assert test='not(descendant::msg:livingSubjectBirthPlaceAddress)'>Note: The optional parameter queryByParameter/parameterList/livingSubjectBirthPlaceAddress was omitted from the model.</assert>   
</rule>
</pattern>
 