== Contributed Content ==

=== Scan Document (CDA wrapped PDF) ===

In the Public Registry:

XDSDocumentEntry.uniqueId = 1.2.3.4.100000022002209036.1196211173506.1

URI = http://129.6.24.109:9080/Repository/1.2.3.4.100000022002209036.1196211173506.1.xml

= Individual Tests =

==  11710 == 

'''Connection + IP Registration'''

The primary purpose of this test is to help manage the users of the Public Registry by associating a Vendor Name with an IP address. This allows the test managers to find your test data based on our displays. This is occasionally necessary to help answer questions. If you are testing a Document Repository then you need to download the XDS testkit to run all your tests and so you have the choice of running test 11710 or registering via the Test Log Browser.  The instructions for registering via test 11710 are described below under '''Test Procedure'''. If you are testing a Document Registry then you have no interaction with the Public Registry and this test is not necessary.  If you are testing a Document Source or Document Consumer actor then a new facility built into the Test Log Browser can be used instead of this test which gets you out of downloading and installing the xdstest2 testing tool. You can find documentation on using the Test Log Browser to register [[XDS_Test_Log_Browser#Registering_your_Vendor_Name|here]].


'''References'''
: None

'''Actors Tested'''
: None

'''Resources'''
: testkit/tests/11710

'''Test Procedure'''

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# Edit the file tests/11710/testplan.xml
# Edit the following fields:
#* <Your Company Name> (include product name is testing more than one).
#* <Your Name>
#* <Your Email>
# Send this metadata as a Submission Request by executing the following from a command prompt:
#* [[XDS_Test_Management#Using_xdstest|Run the test using xdstest]]
# This test does not need to be reported to the Test Manager or logged to Kudu.
# If you test from more than one machine and therefore run this multiple times, please spell the company name the same each time.

== 11728 ==

'''Submit a Folder via XDS.a'''

Verify that the XDS.a Document Source can submit a Folder via [[XDS_Transactions#Provide_and_Register_Document_Set-a|Provide and Register Document Set-a]] transaction.

'''References'''
: ITI TF-2 3.15

'''Actors Tested'''
: Document Source

'''Dependencies'''
: None

'''Resources'''
: testkit/examples/11728 
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Source Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure the WS Endpoint based on this pattern]] 
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/test11728
</pre>
# Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Folder|Submission Set containing a single Folder]] using the [[XDS_Transactions#Provide_and_Register_Document_Set-a|Provide and Register Document Set-a]] transaction 
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

== 11729 ==

'''Submit a Folder with an initial document via XDS.a'''

Verify that the XDS.a Document Source can submit a Folder and initial document via [[XDS_Transactions#Provide_and_Register_Document_Set|Provide and Register Document Set]] transaction.

'''References'''
: ITI TF-2 3.15

'''Actors Tested'''
: Document Source

'''Dependencies'''
: None

'''Resources'''
: testkit/examples/11729 
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Source Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure the WS Endpoint based on this pattern]] 
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/test11729
</pre>
# Submit a [[Metadata_Patterns# Submission Set containing a Single Folder with initial Document| Submission Set containing a Single Folder with initial Document]] using the [[XDS_Transactions#Provide_and_Register_Document_Set|Provide and Register Document Set]] transaction 
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]


==  11730 == 

'''Add Document to Folder'''

Add a Document to an existing Folder.  The Folder is identified by its UUID which is obtained from a query of your choice. 

This submission consists of:
* an XDSSubmissionSet object
* an XDSDocumentEntry object
* a HasMember Association object linking the Submission Set to the Document
* a HasMember Association object linking the existing Folder (in Registry) with Document in submission
* a HasMember Association object linking the Submission Set to the Folder-Document Association
** An ObjectRef identifying the Folder as an object already in the registry

'''References'''
: ITI TF-2 3.15

'''Actors Tested'''
: Document Source

'''Dependencies'''
: Creation of a Folder to add the document to. Test 11729 describes this.

'''Resources'''
: testkit/examples/11730 
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Source Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# Create a Folder per test 11729.
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure the WS Endpoint based on this pattern]] 
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/test11730
</pre>
# Identify the UUID of the Folder of interest with a query of your choosing
# Formulate a submission as described above or use the example metadata found in examples/11730
#* If you use this example, the Folder is referenced symbolically as "$Folder$". This must be replaced with the actual UUID of the folder object in the registry.  Addionally, an ObjectRef with its id set to this UUID must be present in the submission.
# Have your Document Source send the submission 
# Verify that you get a successful RegistryResponse message in return.
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

== 11733 ==

'''Accept Register One Document via XDS.a'''

Verify that the XDS.a Document Registry can accept a [[XDS_Transactions#Register_Document_Set-a|Register Document Set-a]] transaction containing metadata for a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]]. 

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Your registry must support the GetSubmissionSetAndContents Stored Query to pass the evaluation step of this test

'''You will need to'''
: None

'''Resources'''
: testkit/tests/11733 

'''Testing Document Registry Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  11734 == 

'''Retrieve Document'''

Verify that Document Consumer can retrieve a document via the Retrieve Document transaction (HTTP Get).

'''References'''
: ITI TF-2 3.17

'''Actors Tested'''
: Document Consumer

'''Testing Document Consumer Actor'''

Using any available test data:
* [[XDS_Test_Management#Test_Data|test data]]

# Perform queries as is appropriate for your document Consumer leading up to the retrieval of the document
# Retrieve the document
# No logging of results is necessary

== 11735 ==

'''Accept Register Two Documents'''

Verify that the Document Registry can accept a valid SOAP over HTTP message containing valid metadata representing two documents. The metadata will contain a Submission Set and two XDSDocumentEntry objects.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Resources'''
: testkit/tests/11735

'''Testing Document Registry Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  11736 == 

'''Submit Replace/Transformation for Existing Document'''

It is not necessary for Document Sources or Document Repositories to demonstrate this test.  Once test [[#11748]] has been successfully passed, this test will automatically be passed as well.


==  11737 == 

'''Submit Add By-Reference to Submission Set'''

It is possible to add a document to a submission set that has a different patient ID. First, the document itself must be added to the registry by submitting it in a Submission Set. An example of this is shown in examples/11746.  Then to add it to another Submission Set, one that possibly has a different patient ID, submit together or separately an association as follows:

<pre>
<Association associationType="HasMember" 
	sourceObject="the submission set UUID" 
	targetObject="symbolic name or UUID of document">
    <Slot name="SubmissionSetStatus">
        <ValueList>
            <Value>Reference</Value>
        </ValueList>
    </Slot>
</Association>
</pre>
where the SubmissionSetStatus is set to <i>Reference</i>. The new document and the association can be submitted together or separately.

Adding a Document to an existing Submission Set can be done in two ways. Given an existing Submission Set in the Registry:
# Submit the new Document (of course submission must include Submission Set) and the Association linking it to the existing Submission Set
# Submit the new Document. Submit the Assocation linking it to the existing Submission Set in a separate submission

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Source

'''Dependencies'''
: None

'''Testing Document Source Actor'''
# Allocate a new patient ID and uniqueIDs (see [[#Using_the_Public_Registry]])
# Compose Submission Set as described above
#* Also, see examples/11737/metadata.xml
#* where "Another_SubmissionSet" is replaced with the UUID of the target Submission Set (already present in the Registry). 
# Configure the Document Source to submit to 
#*<nowiki>http://hcxw2k1.nist.gov:8080/xdsServices2/registry/soap/portals/yr3a/repository?testeval=11737</nowiki>
# Do the Submit.
# Verify that you get a successful RegistryResponse message in return
# Log the results: [[#Log_Results_of_Provide_and_Register_or_Register_transaction_tested_against_the_Public_Registry_Repository]]

== 11738 ==

'''Submit via Offline Mode'''

Generate a Provide and Register transaction via Offline Mode.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Source
: Document Repository

'''Dependencies'''
: None

'''Testing Document Source and Document Repository Actors'''
No support facilities are available to test this option. The exception is that Eric provides an email server to use to relay offline message. Contact Eric for details. To demonstrate success, again, contact Eric.

==  11739 == 

'''Retrieve with mutual TLS'''

Repeat test [[#11734]] with mutual TLS enabled.

==  11740 == 

'''Register with mutual TLS'''

Repeat any Register test over TLS

==  11741 == 

'''Query with mutual TLS'''

Repeat any Query test with mutual TLS enabled.

'''References'''
: ITI TF-2 3.15

'''Actors Tested'''
: Document Registry
: Document Consumer

'''Dependencies'''
: None

== 11751 ==

'''Accept two documents via XDS.a'''

Verify that the XDS.a Document Repository can accept a submission containing [[Metadata_Patterns#Submission_Set_containing_two_Documents|two documents]] via the [[XDS_Transactions#Provide_and_Register_Document_Set-a|Provide and Register Document Set-a]] transaction and forward the updated metadata to the Public Registry.

'''References'''
: ITI TF-2 3.15
: ITI TF-2 3.14

'''Actors Tested'''
: Document Repository

'''Dependencies'''
: none

'''Resources'''
: testkit/tests/11751 

'''Testing Document Repository Actor'''

Submit a [[Metadata_Patterns#Submission_Set_containing_Two_Documents|Submission Set containing two Documents]] using the [[XDS_Transactions#Provide_and_Register_Document_Set|Provide and Register Document Set]] transaction to your Repository. Your Repository forwards the metadata on to the Public Registry via the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forwards metadata to the WS Endpoint based on this pattern]] 
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/registryA2doc
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

'''Evaluation''' by the Public Registry
# [[#Schema|Schema]]
# [[#Metadata_Validator|Metadata Validator]]
# Correct content ([[Metadata_Patterns#Submission_Set_containing_Two_Documents|Submission Set containing two Documents]])
# Correct hash and size computed by Repository actor and placed in metadata.

'''Evaluation''' by xdstest2
# Evaluation query returns correct metadata

==  11801 == 

'''Query for ObjectRefs'''

Verify that Document Consumer can query the Registry for ObjectRefs and that a Document Registry can service such a query.

Why does this exist? Any potential document listing can be very long.  To use LeafClass queries to generate listing pages (pick lists) would be very slow as this requires the Registry to assemble metadata XML for each document. Starting with an ObjectRef query that returns just the list of identifiers for each document can be used to generate 'page at a time' listing.  For each page, a full LeafClass query can be issued to get the content for display. 11801 (and 11802) are intended for debug usage only.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Consumer
: Document Registry

'''Dependencies'''
: Test [[#11870]] must be run before this test. It loads necessary test data.

'''Testing Document Consumer Actor'''
# Configure the Document Consumer under test to send to the URL
#* <nowiki>http://hcxw2k1.nist.gov:8080/xdsServices2/registry/soap/portals/query</nowiki>
# Have your Document Consumer send the query in test/11801/query.xml.
# Verify that you get a successful RegistryResponse message in return containing 1 ObjectRef.
# Log the results: [[#Result_Reporting_-_Client_Testing_against_server]]

'''Testing Document Registry Actor'''
# Edit test/11801/test.properties
# Change the URL parameter to point to your registry.
# Run the test using [[XDS_Test_Kit_2005-2006#How_to_use_the_xdstest_tool | xdstest]].
# Log the results: [[#Result_Reporting_-_Server_Testing_using_xdstest]]

==  11802 == 

'''Query for LeafClass'''

Verify that Document Consumer can query the Registry for LeafClass and that a Document Registry can service such a query. This is intended for debug purposes only.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Consumer
: Document Registry

'''Dependencies'''
: Test 11870 must be run before this test

'''Testing Document Consumer Actor'''
# Configure the Document Consumer under test to send to the URL
#* <nowiki>http://hcxw2k1.nist.gov:8080/xdsServices2/registry/soap/portals/query</nowiki>
# Have your Document Consumer send the query in test/11802/query.xml.
# Verify that you get a successful RegistryResponse message in return containing 1 ExtrinsicObject.
# Log the results: [[#Result_Reporting_-_Client_Testing_against_server]]

'''Testing Document Registry Actor'''
# Edit test/11802/test.properties
# Change the URL parameter to point to your registry.
# Run the test using [[XDS_Test_Kit_2005-2006#How_to_use_the_xdstest_tool | xdstest]].
# Log the results: [[#Result_Reporting_-_Server_Testing_using_xdstest]]

==  11827 == 

'''Accept One Document via XDS.a'''

Verify that the XDS.a Document Repository can accept a SOAP with Attachments message containing metadata representing a Submission Set and a single document. The content of the document are include as an attachment to the message according to the SOAP with Attachments standard. Specifically, the metadata shall be augmented with the following attributes to match the included document:
* XDSDocumentEntry.size
* XDSDocumentEntry.hash
* XDSDocumentEntry.URI
and then forwarded on to the Public Registry in a XDS.a Register transaction. These attributes must be calculated and added correctly. The URI installed into XDSDocumentEntry.URI need not be publicly available on the Internet. See tests/11733 for an example of how to add these metadata attributes.

'''Warning: some testers have run the utility unix2dos on the entire test kit and it will break this test.  The file attachment, my_document.txt, when modified by this utility will no longer match in size or hash.'''

'''References'''
: ITI TF-2 3.14
: ITI TF-2 3.15

'''Actors Tested'''
: XDS.a Document Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11827 section of [[XDS_Test_Kit_Download|test kit]] which has two sections, ''submit'' and ''eval'
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Repository Actor'''

Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Provide_and_Register_Document_Set|Provide and Register Document Set]] transaction to your XDS.a Repository. Your Repository forwards the metadata on to the Public Registry via the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forwards metadata to the WS Endpoint based on this pattern]] 
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/test11827
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

'''Evaluation''' by the Public Registry
# [[#Schema|Schema]]
# [[#Metadata_Validator|Metadata Validator]]
# Correct content ([[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]])
# Correct hash and size computed by Repository actor and placed in metadata.


'''Evaluation''' by xdstest2
# Evaluation query returns correct metadata

==  11870 == 

'''Load test data set 1'''

Load test data into Registry to support query testing. 

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: None

'''Dependencies'''
: None

'''Testing Document Registry Actor'''
# Edit testdatga/11870/test.properties
# Change the URL parameter to point to your registry
# Edit testdata/11870/metadata.xml
#* Change $PatientId to a real patient ID globally
#* Change all uniqueIds (start with $uniqueId) to real uniqueIDs in your system
# Run the test using [[XDS_Test_Kit_2005-2006#How_to_use_the_xdstest_tool | xdstest]].
# Log the results: no logging required

This submission contains a single Submission Set, 3 Documents, and Associations to make the documents part of the Submission Set.

== 11871 ==

'''Accept Document Replace via XDS.a'''

Verify that the XDS.a Document Registry can accept a [[Metadata_Patterns#Document_Replace|Document Replace]] via the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction.  No transformations or addendum are present.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11871

'''Testing Document Registry Actor'''

Submit a [[Metadata_Patterns#Document_Replace|Document Replace]] using the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction to your Registry. Then validate the state of your Registry using the GetSubmissionSetAndContents Stored Query.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

'''Evaluation'''
# Submit, rplc, eval steps must be successful
# Within the eval step, the validate_deprecate test step must show that the original document is deprecated and the validate_new must show that the replacement document is approved (status = Approved).

== 11873 ==

'''Accept Document Addendum via XDS.a'''

Verify that the XDS.a Document Registry can accept a [[Metadata_Patterns#Document_Addendum|Document Addendum]] via the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11873

'''Testing Document Registry Actor'''

Submit a [[Metadata_Patterns#Document_Addendum|Document Addendum]] using the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction to your Registry. Then validate the state of your Registry using the GetSubmissionSetAndContents Stored Query. An overview of this test is:
* Submit a submission set containing a single document.  Do this twice.
* Replace (issue RPLC) for one of the documents
* Attempt addendum on both original documents.  Creating an addendum on the replaced document must fail. Creating an addendum on the non-replaced document must succeed.
* Issue GetSubmissionSetandContents Stored Query on both addendum attempts. The plain addendum must succeed and the one involving the replace must fail. In this case succeed and fail simply refers to whether content is returned and not the status on the Stored Query.

The detailed steps are:

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]


== 11874 ==

'''Accept Document Transformation via XDS.a'''

Verify that the XDS.a Document Registry can accept a [[Metadata_Patterns#Document_Transformation|Document Transformation]] via the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11874

'''Testing Document Registry Actor'''

Submit a [[Metadata_Patterns#Document_Transformation|Document Transformation]] using the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction to your Registry. Then validate the state of your Registry using the GetSubmissionSetAndContents Stored Query. An overview of this test is:
* Submit a submission set containing a single document.  Do this twice.
* Replace (issue RPLC) for one of the documents
* Attempt transformation on both original documents.  Creating a transformation on the replaced document must fail. Creating a transformation on the non-replaced document must succeed.
* Issue GetSubmissionSetandContents Stored Query on both transformation attempts. The plain transformation must succeed and the one involving the replace must fail. In this case succeed and fail simply refers to whether content is returned and not the status on the Stored Query.

The detailed steps are:

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]


== 11875 ==

'''Accept Document Transform/Replace via XDS.a'''

Verify that the XDS.a Document Registry can accept a [[Metadata_Patterns#Document_Transform_Replace|Document Transform Replace]] via the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction.  No transformations or addendum are present.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11875

'''Testing Document Registry Actor'''

Submit a [[Metadata_Patterns#Document_Replace|Document Replace]] using the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction to your Registry. Then validate the state of your Registry using the GetSubmissionSetAndContents Stored Query.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]


'''Evaluation'''
# Submit, rplc, eval steps must be successful
# Within the eval step, the validate_deprecate test step must show that the original document is deprecated and the validate_new must show that the replacement document is approved (status = Approved).

== 11876 ==

'''Reject Submission of Invalid Patient ID via XDS.a'''

This test allows an implementation of the Document Registry actor to show that it rejects submissions of documents that are registered to patients whose patient ID has not been received through the Patient Identity Feed transaction. 

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11876 

'''Testing Document Registry Actor'''

Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction to your Registry. The registry must reject the submission giving the '''XDSUnknownPatientId''' error code

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11877 ==

'''Reject Submission Set, Patient ID does not match Document (XDS.a)'''

This test allows an implementation of the Document Registry actor to show that it rejects submissions where the Submission Set and Document have different Patient IDs. 

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11877 

'''Testing Document Registry Actor'''

Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction to your Registry. The metadata provided has different Patient IDs in the Submission Set and the Document metadata. The registry must reject the submission giving the '''XDSPatientIdDoesNotMatch''' error code. You may change the Patient IDs coded if that makes the test easier as long as they are different.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]


==  11878 == 

'''Reject Submission, Patient ID on Replacement Document does not match Original'''

This test allows an implementation of the Document Registry actor to show that it rejects submissions of replacement documents where the patient ID of the replacement document does not match the patient ID of the original document. 

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11878

'''Testing Document Registry Actor'''

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  11879 == 

'''Accept Create Folder'''

Verify that the XDS.a Document Registry can accept the submission of a Folder.    

This submission consists of:
* an XDSSubmissionSet object
* an XDSFolder object
* an HasMember Association object linking the Submission Set to the Folder

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Your registry must support the GetSubmissionSetAndContents Stored Query to pass the evaluation step of this test

'''Resources'''
: testkit/tests/11879

'''Testing Document Registry Actor'''
An overview of this test is:
* Submit a folder within a submission set to document registry
* Issue GetSubmissionSetAndContents to verify content in registry

The test steps are:

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  11880 == 

'''Accept Create Folder with Initial Document'''

Verify that the XDS.a Document Registry can accept the submission of a Folder with a document.    

This submission consists of:
* an XDSSubmissionSet object
* an XDSFolder object
* a HasMember Association object linking the Submission Set to the Folder
* a Document object
* a HasMember Association object linking the Folder to the Document

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Your registry must support the GetSubmissionSetAndContents and GetFolderAndContents Stored Queries to pass the evaluation step of this test

'''You will need to'''
: None

'''Resources'''
: testkit/tests/11880 

'''Testing Document Registry Actor'''
An overview of this test is:
* Submit above described metadata
* Issue GetSubmissionSetAndContents to verify content in registry

The test steps are:

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  11881 == 

'''Accept Add New Document to Folder'''

Verify that the XDS.a Document Registry can accept a submission that contains a document which is added to an existing folder.    

This submission consists of:
* an XDSSubmissionSet object
* an XDSDocumentEntry object
* an HasMember Association linking the Submission Set to the Document
* an HasMember Association linking an existing Folder to this new Document

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Your registry must support the GetFolderAndContents Stored Query to pass the evaluation step of this test

'''Resources'''
: teskit/tests/11881 

'''Testing Document Registry Actor'''
An overview of this test is:
* Submit an empty folder
* Submit a document with the association to link it to the folder
* Issue GetFolderandContents Stored Query to verify contents of Registry

The test steps are:

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  11882 == 

'''Reject Add Document to Folder - Patient ID does not match'''

Verify that the XDS.a Document Registry will reject a submission that contains a document which is added to an existing folder with a different Patient ID.    

This submission consists of:
* an XDSSubmissionSet object
* an XDSDocumentEntry object
* an HasMember Association linking the Submission Set to the Document
* an HasMember Association linking an existing Folder to this new Document

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Your registry must support the GetFolderAndContents Stored Query to pass the evaluation step of this test

'''Resources'''
: testkit/tests/11882 

'''Testing Document Registry Actor'''
An overview of this test is:
* Submit an empty folder
* Submit a document with the association to link it to the folder. The Patient ID on the Document does not match that on the Folder.
* Issue GetFolderandContents Stored Query to verify contents of Registry. The Document must not be a member of the Folder.

The test steps are:

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11883 == 

'''Submission Stored - All or Nothing (XDS.a)'''

A submission including a Submission Set and two documents is submitted to the Registry.  One of the two documents is missing the URI attribute and will therefore cause an error.  A stored query is then used to verify that no Submission Set nor documents are stored in the registry with status Approved.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: XDS.a Document Registry

'''Dependencies'''
: None

'''You will need to'''
: None

'''Resources'''
: teskit/tests/11883 


'''Testing Document Registry Actor'''


# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]


'''Evaluation''' by xdstest2
# The xdstest2 tool will verify that:
: the submission failed 
: the query returns no Submission Set or Documents

==  11884 == 

'''Accept Add By-Reference to Submission Set'''

This tests a Document Registry actor's ability to accept add a document to a submission set by-reference.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Testing Document Registry Actor'''
# Allocate a new patient ID 
# Make any initial submission which includes a Submission Set, test [[#11731]] is a possibility
# Submit to your Document Registry actor implementation via [[XDS_Test_Kit_2005-2006#How_to_use_the_xdstest_tool | xdstest]]
# For the next submission, use tests/11884, with different patient ID from first submission.
# Submit to your Document Registry actor implementation via [[XDS_Test_Kit_2005-2006#How_to_use_the_xdstest_tool | xdstest]]
# Verify that you get a successful RegistryResponse message in return
# Log the results: [[#Log_Results_of_Register_transaction_against_your_Registry]]. This must be run twice, once for each patient ID

==  11885 == 

'''Reject Duplicate Document uniqueID with Different Hash (XDS.a)'''

Verify that the XDS.a Document Registry will 
: accept a duplicate XDSDocumentEntry, same XDSDocumentEntry.uniqueId, if the XDSDocumentEntry.hash is the same
: reject if the hash is different

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: XDS.a Document Registry

'''Dependencies'''
: None

'''Resources'''
: teskit/tests/11885 


'''Testing Document Registry Actor'''

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

'''Evaluation''' by xdstest2
# The xdstest2 tool will evaluate that the proper error message is returned from each test step.

==  11886 == 

'''Pass Arbitrary Metadata'''

A Document Repository actor must be able to pass arbitrary metadata from the Document Source to the Document Registry. The only metadata modifications made by a Document Repository is to annotate XDSDocumentEntry objects with size, hash, and URI information.

This tests sends a collection of metadata artifacts through the Repository to the Registry. There they will be verified as complete and unaltered.


'''References'''
: ITI TF-2 3.14
: ITI TF-2 3.15

'''Actors Tested'''
: Document Repository

'''Testing Document Repository Actor'''
# Start with the test data in tests/11886 
# Allocate a new patient ID and uniqueIDs (see [[#Using_the_Public_Registry]])
# Edit these values into the test submission (see [[#Patient_IDs_and_uniqueIds_in_test_material]])
# Edit the file test.properties to point to your repository and to show the correct patient ID
# Configure your Document Repository so that the subsequent Register Transaction is sent to the Public Registry.
# Run the test using [[XDS_Test_Kit_2005-2006#How_to_use_the_xdstest_tool | xdstest]].
# Verify that you get a successful RegistryResponse message in return.
# Log the results: [[#Log_Results_of_Provide_and_Register_or_Register_transaction_tested_against_the_Public_Registry_Repository]]

== 11887 ==

'''Return Errors from Registry (XDS.a)'''

This test demonstrates that a Document Repository returns errors from the Document Registry back to the Document Source. This test is a repeat of test 11877 which tests that a Registry rejects unknown Patient IDs. The Repository under test points to the Public Registry which generates the original error.  The responsibility of the Repository is to return the errors to the Document Source.

'''References'''
: ITI TF-2 3.14, 3.15

'''Actors Tested'''
: Document Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11887


'''Testing Document Repository Actor'''

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedure
s Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forwards metadata
 to the WS Endpoint based on this pattern]] 
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/xdsregistrya
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]


== Query - Configuring the SQL queries supplied in the testkit ==

The SQL queries supplied with the test kit (tests 11910 - 11922) have extra information in the metadata.xml file that must be edited out before using. To edit:

# Decide what optional parameters to the query you want to use
#* The file contains psuedo-comments starting with the pound character (#) and ending with end-of-line.
#* A comment containing the name of an optional parameter indicates that that line is necessary in the query if that optional parameter is used. An example of an optional parameter name is $XDSDocumentEntryConfidentialityCode.
# Delete all lines containing comments which contain parameter names you do not wish to be in your query (filter out unwanted parameters)
# Delete the remaining comments (not the line, just the comment part)
# You should be left with SQL imbedded in XML. This SQL will still contain parameter names embedded in the SQL statements
# Subtitute your values for the parameter names

== Query - Testing the Document Registry ==
This test procedure is used for all Queries.

Verify that a Document Registry can service each query type.

'''References'''
: ITI TF-2 3.16

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Test 11870 must be run before this test to establish test data

'''Testing Document Registry Actor'''
# Edit the test.properties file in the appropriate directory in tests/ (directory is test number).
#* Change the URL parameter to point to your registry.
# Configure the SQL (in metadata.xml in the test directory) to include only the query parameters you need to use.  See [[#Query - Configuring the SQL queries supplied in the testkit]] for instructions.
# Run the tests using [[XDS_Test_Kit_2005-2006#How_to_use_the_xdstest_tool | xdstest]].
# Verify that you get a successful RegistryResponse messages in return containing ExtrinsicObject(s)
# Log the results: [[#Log_Results_of_Query_or_Stored_Query_transaction_against_your_Registry]]

== Query - Testing the Document Consumer ==

Verify that Document Consumer can use the Query facility.

'''References'''
: ITI TF-2 3.16

'''Actors Tested'''
: Document Consumer

'''Dependencies'''
: None

'''Testing Document Consumer Actor'''
# When building your Document Consumer, you may reference the SQL provided in the test kit. You will need to configure the SQL (in metadata.xml in the test directory) to include only the query parameters you need to use.  See [[#Query - Configuring the SQL queries supplied in the testkit]] for instructions.
# Configure the Document Consumer under test to send to the URL
#* <nowiki>http://hcxw2k1.nist.gov:8080/xdsServices2/registry/soap/portals/query</nowiki>
# Have your Document Consumer issue the Query. Examples are found in tests/ by the test number 
# Log the results: [[#Log_Results_of_Query_or_Stored_Query_transactions_tested_against_the_Public_Registry]]

==  Stored Query - Testing the Document Registry == 

The testing of all Stored Queries follows the same instructions.

'''References'''
: ITI TF-2 3.18

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: test [[#11870]] - load test data set 1
: test [[#11910]] - load test data set 2
: test [[#11890]] - load test data set 3 (Folders)

'''Testing Document Registry Actor'''
# Identify the directory in the test kit that supports the query of interest.  As an example, test 11900 (GetAll query) can be found in directory tests/11900.
# Edit the file test.properties to point to your Registry by editing the value of the <b>url</b> property.
# Execute the test by running [[XDS_Test_Kit_2005-2006#How_to_use_the_xdstest_tool | xdstest]] in that directory
# Report the results using the directions at [[#Log Results of Register transaction against your Registry]]

Note that tests 11897 (FindDocuments) and 11898 (FindSubmissionSets) each have multiple parts (identified by sub-directory parta, partb, etc). 11897 has 3 parts and 11898 has 2 parts. For these two tests, each part must be tested against your registry and reported.

==  Stored Query - Testing the Document Consumer == 

The testing of all Stored Queries follows the same instructions.

'''References'''
: ITI TF-2 3.18

'''Actors Tested'''
: Document Consumer

'''Dependencies'''
: none

'''Testing Document Consumer Actor'''
# Execute stored query against Public Registry.
# Report your results following the instructions at [[# Log_Results_of_Query_or_Stored_Query_transactions_tested_against_the_Public_Registry]]

See [[#Stored Query - Testing the Document Registry]] for details on test data.

==  11890 == 

'''Load test data set 3'''

Load test data into Registry to support query testing. 

'''References'''
: ITI TF-2 3.14
: ITI TF-2 3.42


'''Actors Tested'''
: None

'''Dependencies'''
: None

'''Resources'''
: testkit/testdata/11890 

'''Testing Document Registry Actor'''

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

The results of this test should not be logged in Kudu.

== 11897 == 
'''FindDocuments Stored Query'''

Test a Document Registry's implementation of the FindDocuments Stored Query.

This test has multiple parts where each part focuses on one or a collection of the parameters to the FindDocuments Stored Query.

'''References'''
: ITI TF-4 3.18

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Test [[#11890|11890]] must be run before this test to establish the test data in your registry

'''Resources'''
: testkit/tests/11897 

'''Testing FindDocuments Stored Query'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]


== 11898 == 
'''FindSubmissionSets Stored Query'''

Test a Document Registry's implementation of the FindSubmissionSets Stored Query.

This test has multiple parts where each part focuses on one or a collection of the parameters to the FindSubmissionSets Stored Query.

'''References'''
: ITI TF-4 3.18

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Test [[#11890|11890]] must be run before this test to establish the test data in your registry

'''Resources'''
: testkit/tests/11898 

'''Testing FindSubmissionSets Stored Query'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11901 == 
'''GetDocuments Stored Query'''

Test a Document Registry's implementation of the GetDocuments Stored Query.

This test has multiple parts where each part focuses on one or a collection of the parameters to the GetDocuments Stored Query.

'''References'''
: ITI TF-4 3.18

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Test [[#11890|11890]] must be run before this test to establish the test data in your registry

'''Resources'''
: testkit/tests/11901 


'''Testing GetDocuments Stored Query'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11902 == 
'''GetFolders Stored Query'''

Test a Document Registry's implementation of the GetFolders Stored Query.

This test has multiple parts where each part focuses on one or a collection of the parameters to the GetFolders Stored Query.

'''References'''
: ITI TF-4 3.18

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Test [[#11890|11890]] must be run before this test to establish the test data in your registry

'''Resources'''
: testkit/tests/11902 

'''Overview of the test steps contained in the test plan'''

* uniqueid - query by uniqueid
* uuid - query by uuid

'''Testing GetFolders Stored Query'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11903 == 
'''GetAssociations Stored Query'''

Test a Document Registry's implementation of the GetAssociations Stored Query.

This test has multiple parts where each part focuses on one or a collection of the parameters to the GetAssociations Stored Query.

'''References'''
: ITI TF-4 3.18

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Test [[#11890|11890]] must be run before this test to establish the test data in your registry

'''Resources'''
: testkit/tests/11903

'''Testing GetAssociations Stored Query'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11904 == 
'''GetDocumentsAndAssociations Stored Query'''

Test a Document Registry's implementation of the GetDocumentsAndAssociations Stored Query.

This test has multiple parts where each part focuses on one or a collection of the parameters to the GetDocumentsAndAssociations Stored Query.

'''References'''
: ITI TF-4 3.18

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Test [[#11890|11890]] must be run before this test to establish the test data in your registry

'''Resources'''
: testkit/tests/11904 

'''Testing GetDocumentsAndAssociations Stored Query'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11905 == 
'''GetSubmissionSets Stored Query'''

Test a Document Registry's implementation of the GetSubmissionSets Stored Query.

This test has multiple parts where each part focuses on one or a collection of the parameters to the GetSubmissionSets Stored Query.

'''References'''
: ITI TF-4 3.18

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Test [[#11890|11890]] must be run before this test to establish the test data in your registry

'''Resources'''
: testkit/tests/11905 

'''Testing GetSubmissionSets Stored Query'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11906 == 
'''GetSubmissionSetAndContents Stored Query'''

Test a Document Registry's implementation of the GetSubmissionSetAndContents Stored Query.

This test has multiple parts where each part focuses on one or a collection of the parameters to the GetSubmissionSetAndContents Stored Query.

'''References'''
: ITI TF-4 3.18

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Test [[#11890|11890]] must be run before this test to establish the test data in your registry

'''Resources'''
: testkit/tests/11906 

'''Testing GetSubmissionSetAndContents Stored Query'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11907 == 
'''GetFolderAndContents Stored Query'''

Test a Document Registry's implementation of the GetFolderAndContents Stored Query.

This test has multiple parts where each part focuses on one or a collection of the parameters to the GetFolderAndContents Stored Query.

'''References'''
: ITI TF-4 3.18

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Test [[#11890|11890]] must be run before this test to establish the test data in your registry

'''Resources'''
: testkit/tests/11907 

'''Overview of the test steps contained in the test plan'''

* uniqueid - query by uniqueid
* uuid - query by uuid
* conf_code - query by uuid with filter on confidentiality code
* both_conf_code - query by uuid with multi-value filter on confidentiality code
* format_code - query by uuid with filter on format code

'''Testing GetFolderAndContents Stored Query'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11908 == 
'''GetFoldersForDocument Stored Query'''

Test a Document Registry's implementation of the GetFoldersForDocument Stored Query.

This test has multiple parts where each part focuses on one or a collection of the parameters to the GetFoldersForDocument Stored Query.

'''References'''
: ITI TF-4 3.18

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Test [[#11890|11890]] must be run before this test to establish the test data in your registry

'''Resources'''
: testkit/tests/11908 


'''Testing GetSubmissionSetAndContents Stored Query'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11909 == 
'''GetRelatedDocuments Stored Query'''

Test a Document Registry's implementation of the GetRelatedDocuments Stored Query.

This test has multiple parts where each part focuses on one or a collection of the parameters to the GetRelatedDocuments Stored Query.

'''References'''
: ITI TF-4 3.18

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Test [[#11890|11890]] must be run before this test to establish the test data in your registry

'''Resources'''
: testkit/tests/11909 

'''Testing GetRelatedDocuments Stored Query'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11952 ==

Submit a Consent Document referencing a patientID and one or more Policy OIDs.

Tests Document Source

== 11953 ==

Submit a Clinical Document which references an existing Consent Document.

Tests Document Source

== 11954 == 

Query for a Consent protected Clinical Document

Tests Document Consumer

== 11955 ==

Accept Submission of Clinical Document which references a Consent submitted earlier.

Tests Document Registry

Depends on test 11959

== 11956 ==

Reject Register transaction of a Clinical Document with Confidentiality Code not represented by an Active Consent within the Registry actor.

Tests Document Registry

== 11957 ==

Accept Stored Query which includes filtering on Confidentiality Codes. The Consents containing these Confidentiality Codes and the Clinical Documents referencing these Confidentiality Codes were submitted earlier in separate tests.

Tests Document Registry

== 11958 ==

Accept Stored Query which does not include filtering on Confidentiality Codes

Tests Document Registry

== 11959 == 

Load BPPC test data.

Tests Document Registry

== 11960 == 

Stored Query does not return Clinical Documents if Consent has been revoked.

Tests Document Registry

Depends on Test 11959

== 11961 == 

Stored Query does not return Clinical Documents if Consent has expired.

Tests Document Registry

Depends on Test 11959


See Test [[XDS_Test_Kit_2006-2007_Test_Descriptions#11954 | 11954 - Query for Clinical Document]]

==  11963 == 

'''Accept Submission'''

Verify that the Document Recipient can accept an XDR-style transmission.  This will be tested via manual upload from disk. There is currently no infrastructure to test ebMS. 

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Recipient

'''Testing Document Recipient Actor'''
# Use the test material in the test kit in tests/11963
# Perform the manual import
# Capture screen image showing
#* Status of transaction acceptance OR 
#* Display of imported material
# Log the screen capture in Kudu

== 11964 ==

'''Send One Document'''

Compose XDR-style transmission of one or more documents. Submit this content to Kudu in a ZIP file.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Source

The ZIP file shall contain the following files representing the content of an XDR-style transmission:

* METADATA.HDR - containing the header lines necessary for transmitting the metadata (the headers that would be present in the MIME Multipart-Part containing the metadata)
* METADATA.XML - containing the metadata of the submission
* Content to match the metadata:
** Each piece of content is to be represented by two files: NAME.HDR and NAME.EXT where 
*** NAME is replaced by a  unique name within the submission which matches the URI element of the metadata.  
*** EXT is replaced with the correct file extension for that file/media type. 
* The header file shall contain the necessary MIME Multipart-Part header content necessary for transmitting this document. The content file shall contain the content byte-stream to be transmitted. 

The metadata, header, and content portions of the submission shall be consistent by XDS rules.

== 11965 ==

'''Accept XDM Content'''

This test supplies example XDM-style content for testing Portal Media Importer actors. No logging of test results is required.

'''References'''
: ITI TF-2 3.32

'''Actors Tested'''
: Portal Media Importer

Content can be found in tests/11965.

== 11966 ==

'''Accept one document via XDS.b'''

Verify that the XDS.b Document Repository can accept a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|single document]] via the [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction and forward the updated metadata to the Public Registry. The repository is tested with both MTOM and MTOM/XOP encodings

'''References'''
: ITI TF-2 3.41
: ITI TF-2 3.42

'''Actors Tested'''
: Document Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11966

'''Testing Document Repository Actor'''

Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction to your Repository. Your Repository forwards the metadata on to the Public Registry via the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction. This is done twice, once with MTOM and once with MTOM/XOP encodings.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedure
s Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forwards metadata
 to the WS Endpoint based on this pattern]] 
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/test11966
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]


'''Evaluation''' by the Public Registry
# [[#Schema|Schema]]
# [[#Metadata_Validator|Metadata Validator]]
# Correct content ([[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]])
# Correct hash and size computed by Repository actor and placed in metadata.


'''Evaluation''' by xdstest2
# Evaluation query returns correct metadata

== 11969 ==

'''Submit a Folder via XDS.b'''

Verify that the XDS.b Document Source can submit a Folder via [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction.

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Source

'''Dependencies'''
: None

'''Resources'''
: testkit/examples/11969 
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Source Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure the WS Endpoint based on this pattern]] 
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/test11969
</pre>
# Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Folder|Submission Set containing a single Folder]] using the [[XDS_Transactions#Provide_and_Register_Document_Set-a|Provide and Register Document Set-a]] transaction 
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]


== 11970 ==

'''Submit a Folder with an initial document via XDS.b'''

Verify that the XDS.b Document Source can submit a Folder and initial document via [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction.

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Source

'''Dependencies'''
: None

'''Resources'''
: testkit/examples/11970 
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Source Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure the WS Endpoint based on this pattern]] 
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/test11970
</pre>
# Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Folder|Submission Set containing a single Folder]] using the [[XDS_Transactions#Provide_and_Register_Document_Set-a|Provide and Register Document Set-a]] transaction 
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

==  11972 == 

'''Add Existing Document to Existing Folder using XDS.a'''

Add an existing Document to an existing Folder.  The Folder and Document are identified by its UUID which is obtained from a query of your choice. 

This submission consists of:
* an XDSSubmissionSet object
* a HasMember Association object linking the existing Folder (in Registry) with the existing Document
* a HasMember Association object linking the Submission Set to the above Association
* ObjectRefs identifying the existing Folder and Document as being objects already in the registry

Remember the Folder and Document must have the same Patient ID.

'''References'''
: ITI TF-2 3.15

'''Actors Tested'''
: Document Source

'''Resources'''
: testkit/examples/11972
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Dependencies'''
: Creation of a Folder to add the document to. Test 11728 describes this.
: Submission of a Document to add to the Folder. Test 11746 describes this.

'''Testing Document Source Actor'''

# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure the WS Endpoint based on this pattern]] 
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/test11972
</pre>
# Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Folder|Submission Set containing a single Folder]] using the [[XDS_Transactions#Provide_and_Register_Document_Set-a|Provide and Register Document Set-a]] transaction 
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

==  11973 == 

'''Add Existing Document to Existing Folder using XDS.b'''

Add an existing Document to an existing Folder.  The Folder and Document are identified by its UUID which is obtained from a query of your choice. 

This submission consists of:
* an XDSSubmissionSet object
* a HasMember Association object linking the existing Folder (in Registry) with the existing Document
* a HasMember Association object linking the Submission Set to the above Association
* a HasMember Association object linking the Submission Set to the above Association

Remember the Folder and Document must have the same Patient ID.

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Source

'''Resources'''
: testkit/examples/11973
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Dependencies'''
: Creation of a Folder to add the document to. Test 11969 describes this.
: Submission of a Document to add to the Folder. Test 12049 describes this.

'''Testing Document Source Actor'''

# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure the WS Endpoint based on this pattern]] 
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/test11973
</pre>
# Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Folder|Submission Set containing a single Folder]] using the [[XDS_Transactions#Provide_and_Register_Document_Set-a|Provide and Register Document Set-a]] transaction 
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

==  11974 == 

'''Replace Existing Document'''

Verify that Document Source can issue a document replacement. To replace a document, an original document must be discovered through a query. Its UUID must be extracted from the query results. The new document is composed along with a RPLC Association to link the new document to the old.  The registry adaptor takes responsibility for deprecating the old document. More specifically, the following must be composed in a submission:
* an XDSSSubmissionSet object
* an XDSDocumentEntry object
* a HasMember Association linking Submission Set to the Document
* a RPLC Association linking the new Document to the existing document being replaced 
There must also be a single document included in the submission as an attachment.

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Source

'''Dependencies'''
: testkit/examples/12049 can be used to create the existing document

'''Resources'''
: testkit/examples/11974
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]


'''Testing Document Source Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure the WS Endpoint based on this pattern]] 
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/test11974
</pre>
# Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Folder|Submission Set containing a single Folder]] using the [[XDS_Transactions#Provide_and_Register_Document_Set-a|Provide and Register Document Set-a]] transaction 
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

== 11979 ==

'''Accept two documents via XDS.b'''

Verify that the XDS.b Document Repository can accept a submission containing [[Metadata_Patterns#Submission_Set_containing_two_Documents|two documents]] via the [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction and forward the updated metadata to the Public Registry.

'''References'''
: ITI TF-2 3.41
: ITI TF-2 3.42

'''Actors Tested'''
: Document Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11979 

'''Testing Document Repository Actor'''

Submit a [[Metadata_Patterns#Submission_Set_containing_Two_Documents|Submission Set containing two Documents]] using the [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction to your Repository. Your Repository forwards the metadata on to the Public Registry via the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forwards metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/registryB2doc
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

'''Evaluation''' by the Public Registry
# [[#Schema|Schema]]
# [[#Metadata_Validator|Metadata Validator]]
# Correct content ([[Metadata_Patterns#Submission_Set_containing_Two_Documents|Submission Set containing two Documents]])
# Correct hash and size computed by Repository actor and placed in metadata.

'''Evaluation''' by xdstest2
# Evaluation query returns correct metadata

== 11980 ==

'''Accept Document with size, hash and URI attributes via XDS.a'''

Verify that the XDS.a Document Repository can accept a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|single document]] via the [[XDS_Transactions#Provide_and_Register_Document_Set|Provide and Register Document Set]] transaction and forward the updated metadata to the Public Registry. The XDSDocumentEntry metadata is already populated with size, hash, and URI attributes.  These must be overwritten with the correct values.

'''References'''
: ITI TF-2 3.14
: ITI TF-2 3.15

'''Actors Tested'''
: Document Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11980 

'''Testing Document Repository Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forwards metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/repositoryAonedoc
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11981 ==

'''Accept Document with size, hash and URI attributes via XDS.b'''

Verify that the XDS.b Document Repository can accept a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|single document]] via the [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction and forward the updated metadata to the Public Registry. The XDSDocumentEntry metadata is already populated with size, hash, and URI attributes.  These must be overwritten with the correct values.

'''References'''
: ITI TF-2 3.41
: ITI TF-2 3.42

'''Actors Tested'''
: Document Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11981

'''Testing Document Repository Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forward metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/repositoryBonedoc
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  11982 == 

'''Reject submissions where metadata and documents do not match (XDS.a)'''

Verify that the XDS.a Document Repository will reject submissions where there is a mismatch between metadata and the documents attached.

'''References'''
: ITI TF-2 3.15

'''Actors Tested'''
: XDS.a Document Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11982 
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Repository Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forward metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/xdsrepositorya
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

'''Evaluation''' by xdstest2
# The xdstest2 tool will evaluate that the proper error message is returned from each test step.

==  11983 == 

'''Reject submissions where metadata and documents do not match (XDS.b)'''

Verify that the XDS.a Document Repository will reject submissions where there is a mismatch between metadata and the documents attached.

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: XDS.b Document Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11983 
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Repository Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forward metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/xdsrepositoryb
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]


'''Evaluation''' by xdstest2
# The xdstest2 tool will evaluate that the proper error message is returned from each test step.

== 11986 ==

'''Return Errors from Registry (XDS.b)'''

This test demonstrates that a Document Repository-b returns errors from the Document Registry back to the Document Source. This test is a repeat of test 11997 which tests that a Registry rejects unknown Patient IDs. The Repository under test points to the Public Registry which generates the original error.  The responsibility of the Repository is to return the errors to the Document Source.

'''References'''
: ITI TF-2 3.41, 3.42

'''Actors Tested'''
: Document Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11986

'''Testing Document Repository Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forward metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/xdsregistryb
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11990 ==

'''Accept Register one document via XDS.b'''

Verify that the XDS.b Document Registry can accept a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|single document]] via the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction.

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Your registry must support the GetSubmissionSetAndContents Stored Query to pass the evaluation step of this test

'''Resources'''
: testkit/tests/11990 

'''Testing Document Registry Actor'''
Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction to your Registry. Then validate the state of your Registry using the GetSubmissionSetAndContents Stored Query.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11991 ==

'''Accept Register two documents via XDS.b'''

Verify that the XDS.b Document Registry can accept a [[Metadata_Patterns#Submission_Set_containing_Two_Documents|two documents]] via the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction.

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11991 

'''Testing Document Registry Actor'''
Submit a [[Metadata_Patterns#Submission_Set_containing_Two_Documents|Submission Set containing two Documents]] using the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction to your Registry. Then validate the state of your Registry using the GetSubmissionSetAndContents Stored Query.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11992 ==

'''Accept Document Replace via XDS.b'''

Verify that the XDS.b Document Registry can accept a [[Metadata_Patterns#Document_Replace|Document Replace]] via the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction. No transformations or addendum are present.

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11991 

'''Testing Document Registry Actor'''

Submit a [[Metadata_Patterns#Document_Replace|Document Replace]] using the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction to your Registry. Then validate the state of your Registry using the GetSubmissionSetAndContents Stored Query.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11993 ==

'''Accept Document Addendum via XDS.b'''

Verify that the XDS.b Document Registry can accept a [[Metadata_Patterns#Document_Addendum|Document Addendum]] via the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction.

'''References'''
: ITI TF-2 3.42

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11993

'''Testing Document Registry Actor'''

Submit a [[Metadata_Patterns#Document_Addendum|Document Addendum]] using the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction to your Registry. Then validate the state of your Registry using the GetSubmissionSetAndContents Stored Query. An overview of this test is:
* Submit a submission set containing a single document.  Do this twice.
* Replace (issue RPLC) for one of the documents
* Attempt addendum on both original documents.  Creating an addendum on the replaced document must fail. Creating an addendum on the non-replaced document must succeed.
* Issue GetSubmissionSetandContents Stored Query on both addendum attempts. The plain addendum must succeed and the one involving the replace must fail. In this case succeed and fail simply refers to whether content is returned and not the status on the Stored Query.

The detailed steps are:

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11994 ==

'''Accept Document Transformation via XDS.b'''

Verify that the XDS.b Document Registry can accept a [[Metadata_Patterns#Document_Transformation|Document Transformation]] via the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction.

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11994

'''Testing Document Registry Actor'''

Submit a [[Metadata_Patterns#Document_Transformation|Document Transformation]] using the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction to your Registry. Then validate the state of your Registry using the GetSubmissionSetAndContents Stored Query. An overview of this test is:
* Submit a submission set containing a single document.  Do this twice.
* Replace (issue RPLC) for one of the documents
* Attempt transformation on both original documents.  Creating a transformation on the replaced document must fail. Creating a transformation on the non-replaced document must succeed.
* Issue GetSubmissionSetandContents Stored Query on both transformation attempts. The plain transformation must succeed and the one involving the replace must fail. In this case succeed and fail simply refers to whether content is returned and not the status on the Stored Query.

The detailed steps are:

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11995 ==

'''Accept Document Transform/Replace via XDS.b'''

Verify that the XDS.a Document Registry can accept a [[Metadata_Patterns#Document_Transform_Replace|Document Transform Replace]] via the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction.  No transformations or addendum are present.

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11995

'''Testing Document Registry Actor'''

Submit a [[Metadata_Patterns#Document_Replace|Document Replace]] using the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction to your Registry. Then validate the state of your Registry using the GetSubmissionSetAndContents Stored Query.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 11996 ==

'''Reject Submission of Invalid Patient ID via XDS.b'''

This test allows an implementation of the Document Registry actor to show that it rejects submissions of documents that are registered to patients whose patient ID has not been received through the Patient Identity Feed transaction. 

'''References'''
: ITI TF-2 3.42

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11996 

'''Testing Document Registry Actor'''

Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction to your Registry. The registry must reject the submission giving the '''XDSUnknownPatientId''' error code

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]


== 11997 ==

'''Reject Submission Set, Patient ID does not match Document (XDS.b)'''

This test allows an implementation of the Document Registry-b actor to show that it rejects submissions where the Submission Set and Document have different Patient IDs. 

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/11997 


'''Testing Document Registry Actor'''

Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction to your Registry. The metadata provided has different Patient IDs in the Submission Set and the Document metadata. The registry must reject the submission giving the '''XDSPatientIdDoesNotMatch''' error code. You may change the Patient IDs coded if that makes the test easier as long as they are different.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  11999 == 

'''Accept Create Folder'''

Verify that the XDS.b Document Registry can accept the submission of a Folder.    

This submission consists of:
* an XDSSubmissionSet object
* an XDSFolder object
* an HasMember Association object linking the Submission Set to the Folder

'''References'''
: ITI TF-2 3.42

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Your registry must support the GetSubmissionSetAndContents Stored Query to pass the evaluation step of this test

'''Resources'''
: testkit/tests/11999 

'''Testing Document Registry Actor'''
An overview of this test is:
* Submit a folder within a submission set to document registry
* Issue GetSubmissionSetAndContents to verify content in registry

The test steps are:

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  12000 == 

'''Accept Create Folder with Initial Document'''

Verify that the XDS.b Document Registry can accept the submission of a Folder with a document.    

This submission consists of:
* an XDSSubmissionSet object
* an XDSFolder object
* a HasMember Association object linking the Submission Set to the Folder
* a Document object
* a HasMember Association object linking the Folder to the Document

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Your registry must support the GetSubmissionSetAndContents and GetFolderAndContents Stored Queries to pass the evaluation step of this test

'''Resources'''
: testkit/tests/12000 

'''Testing Document Registry Actor'''
An overview of this test is:
* Submit above described metadata
* Issue GetSubmissionSetAndContents to verify content in registry

The test steps are:

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  12001 == 

'''Accept Add New Document to Folder'''

Verify that the XDS.b Document Registry can accept a submission that contains a document which is added to an existing folder.    

This submission consists of:
* an XDSSubmissionSet object
* an XDSDocumentEntry object
* an HasMember Association linking the Submission Set to the Document
* an HasMember Association linking an existing Folder to this new Document
* an HasMember Association linking the Submission Set to the above Association

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Your registry must support the GetFolderAndContents Stored Query to pass the evaluation step of this test

'''Resources'''
: testkit/tests/12001

'''Testing Document Registry Actor'''
An overview of this test is:
* Submit an empty folder
* Submit a document with the association to link it to the folder
* Issue GetFolderandContents Stored Query to verify contents of Registry

The test steps are:

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  12002 == 

'''Reject Add Document to Folder - Patient ID does not match'''

Verify that the XDS.b Document Registry will reject a submission that contains a document which is added to an existing folder with a different Patient ID.    

This submission consists of:
* an XDSSubmissionSet object
* an XDSDocumentEntry object
* an HasMember Association linking the Submission Set to the Document
* an HasMember Association linking an existing Folder to this new Document
* an HasMember Association linking the Submission Set to the above Association

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: Your registry must support the GetFolderAndContents Stored Query to pass the evaluation step of this test

'''Resources'''
: testkit/tests/12002 

'''Testing Document Registry Actor'''
An overview of this test is:
* Submit an empty folder
* Submit a document with the association to link it to the folder. The Patient ID on the Document does not match that on the Folder.
* Issue GetFolderandContents Stored Query to verify contents of Registry. The Document must not be a member of the Folder.

The test steps are:

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  12004 == 

'''Reject Duplicate Document uniqueID with Different Hash (XDS.b)'''

Verify that the XDS.b Document Registry will 
: accept a duplicate XDSDocumentEntry, with same XDSDocumentEntry.uniqueId, if XDSDocumentEntry.hash is the same
: reject if the hash is different

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: XDS.b Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/12004 

'''Testing Document Registry Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  12005 == 

'''Register with mutual TLS'''

Repeat any Register-b test over TLS

== 12021 ==

'''Accept Retrieve Document Set – two documents'''

Verify that the XDS.b Document Repository can properly respond to a [[XDS_Transactions#Retrieve_Document_Set|Retrieve Document Set transaction]] requesting two documents. 

'''References'''
: ITI TF-2 3.43

'''Actors Tested'''
: Document Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/12021 

'''Testing Document Repository Actor'''

Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction to your Repository. Your Repository forwards the metadata on to the Public Registry via the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction. With this document in your Repository, retrieve the document via the Retrieve Document Set transaction.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forwards metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/xdsregistryb
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]


'''Evaluation'''
# [[#Schema|Schema]]
# RepositoryUniqueId matches (compares value from RetrieveDocumentSetRequest against value from  RetrieveDocumentSetResponse)
# DocumentUniqueId retrieved matches value submitted
# mimeType matches
# Content of document matches

== 12023 ==

'''Retrieve Documents'''

Verify that the XDS.b Document Consumer can use the [[XDS_Transactions#Retrieve_Document_Set|Retrieve Document Set transaction]] to retrieve documents from a Document Repository.

'''References'''
: ITI TF-2 3.43

'''Actors Tested'''
: Document Consumer

'''Dependencies'''
: None 

'''Resources'''
: [[XDS_Test_Management#Test Data|Test data]] - pre-loaded into the Public Registry


'''Testing Document Repository Actor'''

Submit a [[XDS_Transactions#Retrieve_Document_Set|Retrieve Document Set]] transaction to the Public Repository and successfully accept the return document.  The request may be for one or more documents.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]] for declaring results.

== 12024 ==

'''Accept Retrieve'''

Verify that the XDS.a Document Repository can properly respond to a [[XDS_Transactions#Retrieve|Retrieve transaction]] requesting a single document. 

'''References'''
: ITI TF-2 3.17

'''Actors Tested'''
: Document Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/12024 

''Overview''
# Submit a document
# Query to get the URI
# Retrieve via the URI and validate size, mimetype, hash

'''Testing Document Repository Actor'''

Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Provide_and_Register_Document_Set|Provide and Register Document Set]] transaction to your Repository. Your Repository forwards the metadata on to the Public Registry via the [[XDS_Transactions#Register_Document_Set|Register Document Set]] transaction. With this document in your Repository, retrieve the document via the Retrieve Document Set transaction.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forwards metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/xdsregistrya
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

'''Evaluation'''
# Retrieve runs without error
# Mime type returned as Content-Type
# Mime type matches the submission
# Document size is correct
# Hash of retrieved document matches submission

== 12028 ==

'''Accept Retrieve Document Set – single document via TLS'''

Verify that the XDS.b Document Repository can properly respond to a [[XDS_Transactions#Retrieve_Multiple_Documents|Retrieve Multiple Documents transaction]] requesting a single document over a TLS channel. 

'''References'''
: ITI TF-2 3.43

'''Actors Tested'''
: Document Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/12028 


'''Testing Document Repository Actor'''

Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction to your Repository. Your Repository forwards the metadata on to the Public Registry via the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction. With this document in your Repository, retrieve the document via the Retrieve Document Set transaction.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forwards metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/xdsregistryb
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

'''Evaluation'''
# [[#Schema|Schema]]
# RepositoryUniqueId matches (compares value from RetrieveDocumentSetRequest against value from  RetrieveDocumentSetResponse)
# DocumentUniqueId retrieved matches value submitted
# mimeType matches
# Content of document matches
# Communication to the Repository is over a TLS channel

== 12029 ==

'''Accept Retrieve Document Set – single document'''

Verify that the XDS.b Document Repository can properly respond to a [[XDS_Transactions#Retrieve_Multiple_Documents|Retrieve Multiple Documents transaction]] requesting a single document. 

'''References'''
: ITI TF-2 3.43

'''Actors Tested'''
: Document Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/12029 


'''Testing Document Repository Actor'''

Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction to your Repository. Your Repository forwards the metadata on to the Public Registry via the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction. With this document in your Repository, retrieve the document via the Retrieve Document Set transaction.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Repository forwards metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/xdsregistryb
</pre>
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

'''Evaluation'''
# [[#Schema|Schema]]
# RepositoryUniqueId matches (compares value from RetrieveDocumentSetRequest against value from  RetrieveDocumentSetResponse)
# DocumentUniqueId retrieved matches value submitted
# mimeType matches
# Content of document matches

== 12037 ==

'''Accept Retrieve Document Set by Integrated Source/Repository – two documents'''

Verify that the XDS.b Integrated Document Source/Repository can properly respond to a [[XDS_Transactions#Retrieve_Multiple_Documents|Retrieve Multiple Documents transaction]] requesting two documents. 

'''References'''
: ITI TF-2 3.43

'''Actors Tested'''
: Integrated Source/Repository

'''Dependencies'''
: Test 12038 establishes the test data need to run this test

'''Resources'''
: testkit/tests/12038 section of [[XDS_Test_Kit_Download|test kit]] 

'''Testing Integrated Source/Repository Actor'''

The detailed instructions are found in testkit/tests/12037/readme.txt.  The overview is to re-run test 12038 after editing the testplan.xml file and adding the second document submitted in 12038 to the retrieve request.  

== 12038 ==

'''Accept Retrieve Document Set by Integrated Source/Repository – single document'''

Verify that the XDS.b Integrated Document Source/Repository can properly respond to a [[XDS_Transactions#Retrieve_Multiple_Documents|Retrieve Multiple Documents transaction]] requesting a single document. 

'''References'''
: ITI TF-2 3.43

'''Actors Tested'''
: Integrated Source/Repository

'''Dependencies'''

'''Resources'''
: testkit/tests/12038  

'''Testing Integrated Source/Repository Actor'''

The detailed instructions are found in testkit/tests/12038/readme.txt.  The overview is to create two documents in your repository and identify the unique IDs. One of the documents is retrieved using the testplan in tests/12038 and the xdstest tool.  Results of the testplan and Test Log message IDs are logged to Kudu. The data created in this test is used for other Integrated Source/Repository tests.

== Syslog Tests ==

'''General instructions for testing syslog'''


'''References'''
: None

'''Actors Tested'''
: Document Source, Document Consumer, Document Registry, Document Repository

'''Dependencies'''
: None

'''You will need to'''
: None

'''Resources'''
: Syslog Browser available at http://129.6.24.109:9080/SyslogBrowser/index.html


'''Testing'''
For each actor under test, direct Syslog submissions to IP: 129.6.24.109  PORT: 8087


'''Logging Results'''
Log in Kudu the Message Number which can be found at the top of the Message Display panel (right half of screen)

== 12045 ==

'''Accept Retrieve Document'''

Verify that the XDS.a Integrated Source/Repository can properly respond to a [[XDS_Transactions#Retrieve|Retrieve transaction]] requesting a single document. 

'''References'''
: ITI TF-2 3.17

'''Actors Tested'''
: Integrated Source/Repository

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/12045 

'''Testing Integrated Source/Repository Actor'''
# Follow test instructions found in testkit/tests/12045/readme.txt

'''Evaluation'''
# Query runs without error
# Retrieve runs without error
# Correct Mime type returned as Content-Type
# Mime type matches the submission (according to <ExpectedMimeType/>)
# Document size is correct  (according to <ReferenceDocument/>)
# Hash of retrieved document matches submission (according to <ReferenceDocument/>)



==  12046 == 

'''Provide and Register-b (XDS.b) with mutual TLS'''

Repeat [[#12049|test 12049]] with mutual TLS enabled.

== 12047 ==

'''Submit two documents via XDS.b'''

Verify that the XDS.b Document Source can submit [[Metadata_Patterns#Submission_Set_containing_Two_Documents|two documents]] together via the [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction.

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Source

'''Dependencies'''
: None

'''Resources'''
: testkit/examples/12047
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]


'''Testing Document Source Actor'''
Submit a [[Metadata_Patterns#Submission_Set_containing_Two_Documents|Submission Set containing two Documents]] using the [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction

# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/repositoryB2doc
</pre>
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

== 12049 ==

'''Submit one document via XDS.b'''

Verify that the XDS.b Document Source can submit a single document via [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction.

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: Document Source

'''Dependencies'''
: None

'''Resources'''
: testkit/examples/12049 
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Source Actor'''
Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Provide_and_Register_Document_Set-b|Provide and Register Document Set-b]] transaction 

# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/repositoryBonedoc
</pre>
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

== 12051 ==

'''Register one document via XDS.b'''

Verify that the XDS.b Combined Document Source / Document Repository can register a single document via [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction.

'''References'''
: ITI TF-2 3.42

'''Actors Tested'''
: Integrated Document Source / Document Repository

'''Dependencies'''
: None

'''Resources'''
: examples/12051 section of [[XDS_Test_Kit_Download|test kit]]
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Source Actor'''
Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction to the Public Registry.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure your Combined Document Source / Document Repostory actor to send to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/registryBonedoc
</pre>
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

== 12051 ==

'''Register one document via XDS.b'''

Verify that the XDS.b Combined Document Source / Document Repository can register a single document via [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction.

'''References'''
: ITI TF-2 3.42

'''Actors Tested'''
: Integrated Document Source / Document Repository

'''Dependencies'''
: None

'''Resources'''
: examples/12051 section of [[XDS_Test_Kit_Download|test kit]]
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Source Actor'''
Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Register_Document_Set-b|Register Document Set-b]] transaction to the Public Registry.

# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure your Combined Document Source / Document Repostory actor to send to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/registryBonedoc
</pre>
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

==  12052 == 

'''Register One Document via XDS.a with mutual TLS'''

Verify that the XDS.a Integrated Source/Repository can register a document over mutual TLS.

'''References'''
: ITI TF-2 3.14
: ITI TF-2 3.19

'''Actors Tested'''
: Integrated Document Source / Document Repository

'''Dependencies'''
: None

'''Resources'''
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Integrated Source/Repository Actor'''

# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Source/Repository forwards metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/registryAonedoc
</pre>
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

'''Evaluation''' by the Public Registry
# [[#Schema|Schema]]
# [[#Metadata_Validator|Metadata Validator]]
# TLS secure connection used

==  12053 == 

'''Register One Document via XDS.b with mutual TLS'''

Verify that the XDS.b Integrated Source/Repository can register a document over mutual TLS.

'''References'''
: ITI TF-2 3.42
: ITI TF-2 3.19

'''Actors Tested'''
: XDS.b Integrated Source/Repository

'''Dependencies'''
: None

'''Resources'''
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Integrated Source/Repository Actor'''
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Source/Repository forwards metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/registryBonedoc
</pre>
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

'''Evaluation''' by the Public Registry
# [[#Schema|Schema]]
# [[#Metadata_Validator|Metadata Validator]]
# TLS secure connection used

==  12054 == 

'''Register Two Documents via XDS.a'''

Verify that the XDS.a Integrated Source/Repository can register two documents in a single submission set.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: XDS.a Integrated Source/Repository

'''Dependencies'''
: None

'''Resources'''
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Integrated Source/Repository Actor'''
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Source/Repository forwards metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/registryA2doc
</pre>
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

'''Evaluation''' by the Public Registry
# [[#Schema|Schema]]
# [[#Metadata_Validator|Metadata Validator]]

==  12055 == 

'''Register Two Documents via XDS.b'''

Verify that the XDS.b Integrated Source/Repository can register two documents in a single submission set.

'''References'''
: ITI TF-2 3.41

'''Actors Tested'''
: XDS.b Integrated Source/Repository

'''Dependencies'''
: None

'''Resources'''
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Integrated Source/Repository Actor'''
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Have your Source/Repository forwards metadata to the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/registryB2doc
</pre>
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

'''Evaluation''' by the Public Registry
# [[#Schema|Schema]]
# [[#Metadata_Validator|Metadata Validator]]

== 12083 ==

'''Accept Retrieve Document Set by Integrated Source/Repository – retrieve one document over TLS'''

Verify that the XDS.b Integrated Document Source/Repository can properly respond to a [[XDS_Transactions#Retrieve_Multiple_Documents|Retrieve Multiple Documents transaction]] requesting one document when the connection is over a TLS channel. 

Repeat test 12038 using TLS.

== 12084 == 

'''Submission Stored - All or Nothing (XDS.b)'''

A submission including a Submission Set and two documents is submitted to the Registry.  One of the two documents is missing the repositoryUniqueId attribute and will therefore cause an error.  A stored query is then used to verify that no Submission Set nor documents are stored in the registry with status Approved.

'''References'''
: ITI TF-2 3.42

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: None

'''Resources'''
: testkit/tests/12084


'''Testing Document Registry Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

'''Evaluation''' by xdstest
# The xdstest2 tool will verify that:
: the submission failed 
: the query returns no Submission Set or Documents

==  12085 == 

'''Provide and Register (XDS.a) with mutual TLS'''

Repeat any Provide and Register test with mutual TLS enabled.

==  12086 == 

'''Provide and Register-b (XDS.b) with mutual TLS'''

Repeat any Provide and Register-b test with mutual TLS enabled.

== 12087 ==

'''Demonstrate use of at least one Stored Query'''

Demonstrate that your Document Consumer actor can successfully use a Stored Query to query the Public Registry.

'''References'''
: ITI TF-2 3.18

'''Actors Tested'''
: Document Consumer

'''Dependencies'''
: None

'''You will need to'''

'''Resources'''
: [[XDS_Test_Management#Test_Data|test data]]
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Consumer Actor'''

# Using your Document Consumer actor implementation, use a pre-defined XDS Stored Query to retrieve metadata  from the Public Registry. You must select from the pre-loaded metadata defined in the [[#Test_Data_Description|Test Data Description]].
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

== 12318 ==
'''Receiving Gateway Test initialization'''

Establish test data in systems behind Receiving Gateway. There are two sets of instructions.

==== Receiving Gateway has no Registry behind it ====

These instructions apply to Receiving Gateways that do not have an XDS Affinity domain (and therefore an XDS Registry and Repository actors) behind them. This test data must have the following characteristics:
* Single Patient ID
* Metadata for two documents
** Metadata coding shall conform to Public Registry Affinity Domain [[XDS_Main_Page#Configuration_and_Change_Log|configuration]] 
** Metadata is required to conform to Schema and Metadata requirements as evaluated by [http://ihexds.nist.gov:9080/xdstools/jsp/validationService/index.jsp Metadata Validator tool].
** Must be returned consistently for each Cross Gateway Query request (metadata for a document is static)
*  Two documents matching metadata
** uniqueId of document matches metadata XDSDocumentEntry object
** Size, hash, and mimeType attributes in metadata must match document content
** MimeType must be renderable in a typical web browser without special plugins. If mimeType if text/xml then style sheet must be exist, document must have appropriate processing instruction referencing style sheet, and style sheet must be reference-able. (in other words, text/xml must display through style sheet) 

==== Receiving Gateway has a Registry behind it ====

This test also applies to the Public Registry. The section testdata/12318 of the testkit contains the necessary submission to initialize this data.  This has been used to initialize the Public Registry. Initiating Gateway tests reference this data. If you have a Registry behind your Receiving Gateway you can create the test data as described in the previous section or use the testdata/12318 section of the test kit. If you use the test kit, configure the test by inserting your own endpoint into the <RegistryEndpoint/> element.

The test kit data contains two documents with metadata.  One document is simple test (about 5 lines) and the second is a Patient Summary Record.

==== Test 12318 Patient ID ====
'''Current Patient ID in the Public Registry'''
Currently, this test data is available in the Public Registry under Patient ID e3448eae0e1f424^^^&1.3.6.1.4.1.21367.2008.2.1&ISO. This may change over time as improvements to the test data are made.

'''References'''
: ITI TF-2 3.38 and ITI TF-2 3.39

'''Actors Tested'''
: None

'''Dependencies'''
: None

'''Resources'''
: None


'''Test Procedure'''
: None

== 12309 ==
'''FindDocuments XGQ for ObjectRef'''

Receiving Gateway accepts FindDocuments Cross Gateway Query requesting ObjectRefs be returned. ObjectRefs are simple references to XDS Metadata objects.  They are small, in their XML form, and easy to pass even when large number of objects must be listed.

'''References'''
: ITI TF-2 3.38

'''Actors Tested'''
: Receiving Gateway

'''Dependencies'''
: Test [[#12318|12318]] must be run before this test

'''Resources'''
: tests/12309 section of [[XDS_Test_Kit_Download|test kit]]
: [[XDS_Testing_Introduction#Server_Testing|xdstest2 testing tool]]
: [[XDS_Main_Page#Testing_Tools|Other Testing Tools]]


'''Test Procedure'''

Submit a Cross Gateway Query transaction to your Receiving Gateway implementation using the xdstest2 tool.
# [[#Configuring_and_running_the_TestPlan|Configure and run]] the test plan from the test kit to perform the Cross Gateway Query
# [[#Evaluating_the_results_of_the_TestPlan|Evaluate]] the results.
#[[#Log_Results_of_Register_transaction_against_your_Registry|Log the results]]. You need to return the log.xml file.

== 12310 ==
'''FindDocuments XGQ for LeafClass'''

Receiving Gateway accepts FindDocuments Cross Gateway Query requesting LeafClass be returned. A LeafClass request returns the full XDS Metadata for the objects identified in the query. Requesting too may objects in this form can lead to XML processing issues.

'''References'''
: ITI TF-2 3.38

'''Actors Tested'''
: Receiving Gateway

'''Dependencies'''
: Test [[#12318|12318]] must be run before this test

'''Resources'''
: tests/12310 section of [[XDS_Test_Kit_Download|test kit]]
: [[XDS_Testing_Introduction#Server_Testing|xdstest2 testing tool]]
: [[XDS_Main_Page#Testing_Tools|Other Testing Tools]]


'''Test Procedure'''

Submit a Cross Gateway Query transaction to your Receiving Gateway implementation using the xdstest2 tool.
# [[#Configuring_and_running_the_TestPlan|Configure and run]] the test plan from the test kit to perform the Cross Gateway Query
# [[#Evaluating_the_results_of_the_TestPlan|Evaluate]] the results.
#[[#Log_Results_of_Register_transaction_against_your_Registry|Log the results]]. You need to return the log.xml file.

== 12311 ==
'''GetDocuments XGQ for LeafClass'''

Receiving Gateway accepts GetDocuments Cross Gateway Query requesting LeafClass be returned. A FindDocuments query has already been run (test 12309) and returned ObjectRefs matching a particular Patient Id. This query retrieves metadata for one or more documents discovered through the FindDocuments query.

A LeafClass request returns the full XDS Metadata for the objects identified in the query. Requesting too may objects in this form can lead to XML processing issues.

'''References'''
: ITI TF-2 3.38

'''Actors Tested'''
: Receiving Gateway

'''Dependencies'''
: Test [[#12318|12318]] must be run before this test
: Test [[#12309|12309]] must be run before this test

'''Resources'''
: tests/12311 section of [[XDS_Test_Kit_Download|test kit]]
: [[XDS_Testing_Introduction#Server_Testing|xdstest2 testing tool]]
: [[XDS_Main_Page#Testing_Tools|Other Testing Tools]]


'''Test Procedure'''

Submit a Cross Gateway Query transaction to your Receiving Gateway implementation using the xdstest2 tool.
# [[#Configuring_and_running_the_TestPlan|Configure and run]] the test plan from the test kit to perform the Cross Gateway Query
# [[#Evaluating_the_results_of_the_TestPlan|Evaluate]] the results.
#[[#Log_Results_of_Register_transaction_against_your_Registry|Log the results]]. You need to return the log.xml file.

== 12312 ==
'''Cross Gateway Retrieve'''

A Cross Gateway Retrieve transaction is sent to the Receiving Gateway being tested. The parameters of the retrieve are taken from metadata returned in test [[#12311|12311]]. 

'''References'''
: ITI TF-2 3.39

'''Actors Tested'''
: Receiving Gateway

'''Dependencies'''
: Test [[#12311|12311]] must be run before this test

'''Resources'''
: tests/12312 section of [[XDS_Test_Kit_Download|test kit]]
: [[XDS_Testing_Introduction#Server_Testing|xdstest2 testing tool]]
: [[XDS_Main_Page#Testing_Tools|Other Testing Tools]]


'''Test Procedure'''

Submit a Cross Gateway Retrieve transaction to your Receiving Gateway implementation using the xdstest2 tool.
# [[#Configuring_and_running_the_TestPlan|Configure and run]] the test plan from the test kit to perform the Cross Gateway Query
# [[#Evaluating_the_results_of_the_TestPlan|Evaluate]] the results.
#[[#Log_Results_of_Register_transaction_against_your_Registry|Log the results]]. You need to return the log.xml file.

== 12300 ==
'''FindDocuments XGQ for LeafClass'''

An Initiating Gateway actor implementation issues a FindDocuments Cross Gateway Query (XGQ) to the Public Registry's Receiving Gateway requesting LeafClass (full metadata) be returned.

'''References'''
: ITI TF-2 3.38

'''Actors Tested'''
: Initiating Gateway

'''Dependencies'''
: [[XDS_Main_Page#Public_Registry|Public Registry Server]]

'''Resources'''
: [[#12318|Test Data Description (test 12318)]]
: Current Patient ID to use is documented [[Test 12318 Patient ID|here]].
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]
: Example Cross Gateway Query request in examples/12300/testplan.xml (contents of /TestPlan/TestStep/StoredQueryTransaction/Metadata element). For help interpreting the test plan look [[Xdstest2_testing_tool#Understanding_a_TestPlan|here]].
: [[XDS_Main_Page#Testing_Tools|Testing Tools]] (see Test Kit Download)


'''Test Procedure'''

# Configure your Initiating Gateway to send Cross Gateway Query transactions to EndPoint http://129.6.24.109:9080/axis2/services/test12300 on the Public Registry Server
# Issue a FindDocuments XGQ with
#* returnType = LeafClass
#* no home attribute (documented in profile as homeCommunityId)
#* Patient ID to use is documented [[Test 12318 Patient ID|here]].
# You must receive back 2 ExtrinsicObject elements (XDSDocumentEntry objects)
# Upon success, find your test entry on the Public Registry Server using the [[XDS_Test_Log_Browser|XDS Test Log Browser]] and log it to Kudu using these [[#Log_Results_of_Query_or_Stored_Query_transactions_tested_against_the_Public_Registry|instructions]].

== 12301 ==
'''Cross Gateway Retrieve of a single document'''

Issue Cross Gateway Retrieve for a single document based on metadata returned in test 12300. This is done twice. First time request is sent to Public Registry endpoint that returns MTOM/XOP coded documents.  Second time request is sent to endpoint that returns MTOM coded documents.

'''References'''
: ITI TF-2 3.39

'''Actors Tested'''
: Initiating Gateway

'''Dependencies'''
: [[XDS_Main_Page#Public_Registry|Public Registry Server]]

'''Resources'''
: Metadata returned from [[#12300|test 12300]]
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]
: Example Cross Gateway Retrieve request in examples/12098/testplan.xml (contents of /TestPlan/TestStep/RetrieveTransaction/Metadata element) in [[XDS_Main_Page#Testing_Tools|Testing Tools]] (see Test Kit Download). For help interpreting the test plan look [[Xdstest2_testing_tool#Understanding_a_TestPlan|here]].

'''Test Procedure'''
# After successfully executing [[#12300|test 12300]], extract from the results
#* home attribute (documented as homeCommunityId)
#* XDSDocumentEntry.uniqueId attribute from one of the documents returned in metadata
#* XDSDocumentEntry.repositoryUniqueId attribute from the same document
# Configure your Initiating Gateway to send Cross Gateway Retrieve transactions to EndPoint http://129.6.24.109:9080/axis2/services/rg on the Public Registry Server. This endpoint returns MTOM/XOP coded documents.
# Issue a Cross Community Retrieve transaction with the above 3 attributes
# Verify that 1 document is returned
# Repeat the above instructions using endpoint http://129.6.24.109:9080/axis2/services/rgnoopt. This will return documents coded via MTOM. 
# Upon success, for both Cross Gateway Retrieves, find your test entries on the Public Registry Server using the [[XDS_Test_Log_Browser|XDS Test Log Browser]] and log it to Kudu using these [[#Log_Results_of_Query_or_Stored_Query_transactions_tested_against_the_Public_Registry|instructions]].


== 12320 ==
'''Registry SOAP Pattern'''

Test an XDS.b Document Registry implementation to prove it can accept a SIMPLE SOAP message.  This message type is use for both the Stored Query and Register.b transactions.

'''References'''
: ITI TF-2 3.18 and 3.41

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: [[XDS_Main_Page#Public_Registry|Public Registry Server]]

'''Resources'''
: testkit/tests/12320

'''Test Procedure'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 12321 ==
'''Repository SOAP Pattern'''

Test an XDS.b Document Repository implementation to prove it can accept an Optimized MTOM/XOP and Unoptimized MTOM/XOP SOAP messages.  These message types are used for both the Provide and Register-b and Retrieve Multiple Documents transactions.

'''References'''
: ITI TF-2 3.41 and 3.43

'''Actors Tested'''
: Document Repository

'''Dependencies'''
: [[XDS_Main_Page#Public_Registry|Public Registry Server]]

'''Resources'''
: testkit/tests/12321 

'''Test Procedure'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 12322 ==
'''Folder lastUpdateTime'''

Test an XDS.a Document Registry implementation to prove it can properly manage the XDSFolder.lastUpdateTime attribute.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: [[XDS_Main_Page#Public_Registry|Public Registry Server]]

'''Resources'''
: testkit/tests/12322 

'''Test Procedure'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 12323 ==
'''Folder lastUpdateTime'''

Test an XDS.b Document Registry implementation to prove it can properly manage the XDSFolder.lastUpdateTime attribute.

'''References'''
: ITI TF-2 3.42

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: [[XDS_Main_Page#Public_Registry|Public Registry Server]]

'''Resources'''
: testkit/tests/12323 

'''Test Procedure'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 12324 ==
'''Accept Document Replace, Document in Folder'''

A Document Registry (XDS.a), when accepting a Document Replace, must find all Folders the original document is a member of and add the replacement document to those folders.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: [[XDS_Main_Page#Public_Registry|Public Registry Server]]

'''Resources'''
: testkit/tests/12324

'''Test Procedure'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 12325 ==
'''Add Existing document to existing folder'''

This test validates a Registry's ability to perform a basic Folder operation, adding a Document already in Registry to a Folder also already in Registry.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: [[XDS_Main_Page#Public_Registry|Public Registry Server]]

'''Resources'''
: testkit/tests/12324 

'''Test Procedure'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 12326 ==
'''Add Existing document to existing folder'''

This test validates a Registry's ability to perform a basic Folder operation, adding a Document already in Registry to a Folder also already in Registry.

'''References'''
: ITI TF-2 3.42

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: [[XDS_Main_Page#Public_Registry|Public Registry Server]]

'''Resources'''
: testkit/tests/12326 

'''Test Procedure'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

== 12327 ==
'''Accept Document Replace, Document in Folder'''

A Document Registry (XDS.b), when accepting a Document Replace, must find all Folders the original document is a member of and add the replacement document to those folders.

'''References'''
: ITI TF-2 3.42

'''Actors Tested'''
: Document Registry

'''Dependencies'''
: [[XDS_Main_Page#Public_Registry|Public Registry Server]]

'''Resources'''
: testkit/tests/12327 

'''Test Procedure'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using xdstest|Generic Testing Procedures Using xdstest]]
# [[XDS_Test_Management#Using_xdstest|Run and report the test using xdstest]]

==  11743 == 

'''Provide and Register (XDS.a) with mutual TLS'''

Repeat test [[#11746|11746]] with mutual TLS enabled.

== 11746 ==

'''Submit one document via XDS.a'''

Verify that the XDS.a Document Source can submit a single document via [[XDS_Transactions#Provide_and_Register_Document_Set|Provide and Register Document Set]] transaction.

'''References'''
: ITI TF-2 3.15

'''Actors Tested'''
: Document Source

'''Dependencies'''
: None

'''Resources'''
: testkit/examples/11746
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Source Actor'''
Submit a [[Metadata_Patterns#Submission_Set_containing_a_Single_Document|Submission Set containing a single Document]] using the [[XDS_Transactions#Provide_and_Register_Document_Set|Provide and Register Document Set]] transaction 

# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/repositoryAonedoc
</pre>
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]


== 12030 ==

'''Audit Logging of Provide and Register'''

Follow generic instructions found [[XDS_Test_Kit_2007-2008_Test_Descriptions#Syslog_Tests|here]]

== 11747 ==

'''Submit two documents via XDS.a'''

Verify that the XDS.a Document Source can submit [[Metadata_Patterns#Submission_Set_containing_Two_Documents|two documents]] together via the [[XDS_Transactions#Provide_and_Register_Document_Set|Provide and Register Document Set]] transaction.

'''References'''
: ITI TF-2 3.15

'''Actors Tested'''
: Document Source

'''Dependencies'''
: None

'''You will need to'''
: [[XDS_Test_Kit_2007-2008_Test_Descriptions#Allocating_new_Patient_IDs_for_Testing|Allocate a Patient ID]]
: [[XDS_Test_Kit_2007-2008_Test_Descriptions#Allocating_uniqueIDs_for_testing|Allocate unique IDs for Submission Set and Document objects]]

'''Resources'''
: examples/11747 section of [[XDS_Test_Kit_Download|test kit]]
: [[XDS_Test_Log_Browser|XDS Test Log Browser]]

'''Testing Document Source Actor'''
# Configure your Document Source actor to submit to the Public Repository at EndPoint <nowiki>http://ihexds.nist.gov:9080/tf5/services/repositoryA2doc</nowiki>
# Submit a [[Metadata_Patterns#Submission_Set_containing_Two_Documents|Submission Set containing two Documents]] using the [[XDS_Transactions#Provide_and_Register_Document_Set|Provide and Register Document Set]] transaction 
# [[XDS_Test_Kit_2007-2008_Test_Descriptions#Log_Results_of_Provide_and_Register_or_Register_transaction_tested_against_the_Public_Registry_Repository|Log the results]]

==  11748 == 

'''Replace Existing Document'''

Verify that Document Source can issue a document replacement. To replace a document, an original document must be discovered through a query. Its UUID must be extracted from the query results. The new document is composed along with a RPLC Association to link the new document to the old.  The registry adaptor takes responsibility for deprecating the old document. More specifically, the following must be composed in a submission:
* an XDSSSubmissionSet object
* an XDSDocumentEntry object
* a HasMember Association linking Submission Set to the Document
* a RPLC Association linking the new Document to the existing document being replaced 
* An ObjectRef pointing to the document being replaced 
There must also be a single document included in the submission as an attachment.

'''References'''
: ITI TF-2 3.14

'''Actors Tested'''
: Document Source

'''Dependencies'''
: None

'''Resources'''
: testkit/examples/11748 
: testkit/examples/11746 (to establish Document to be replaced)

'''Testing Document Source Actor'''
# Follow [[XDS_Test_Management#Generic Testing Procedures Using Public Registry Server|Generic Testing Procedures Using Public Registry Server]]
# Testkit content testkit/examples/11746 may be used to establish a document in the registry to replace.
# [[XDS_Test_Management#Configure_Public_Registry_Endpoint|Configure the WS Endpoint based on this pattern]]
<pre>
http://ihexds.nist.gov:PORT/EVENT/services/test11748
</pre>
# [[XDS_Test_Management#Using_Public_Registry_Server|Report the test]]

==  11750 == 

'''Submit Transformation for Existing Document'''

It is not necessary for Document Sources or Document Repositories to demonstrate this test.  Once test [[#11748]] has been successfully passed, this test will automatically be passed as well.
