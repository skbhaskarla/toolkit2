/**
 * 
 */
package gov.nist.toolkit.saml.builder;

import gov.nist.toolkit.saml.builder.bean.ActionBean;
import gov.nist.toolkit.saml.builder.bean.AssertionBean;
import gov.nist.toolkit.saml.builder.bean.AttributeBean;
import gov.nist.toolkit.saml.builder.bean.AttributeStatementBean;
import gov.nist.toolkit.saml.builder.bean.AuthDecisionStatementBean;
import gov.nist.toolkit.saml.builder.bean.AuthenticationStatementBean;
import gov.nist.toolkit.saml.builder.bean.SubjectBean;
import gov.nist.toolkit.saml.util.SAML2CallbackHandler;
import gov.nist.toolkit.saml.util.SAMLCallback;
import gov.nist.toolkit.saml.util.SAMLParms;
import gov.nist.toolkit.saml.util.SamlConstants;

import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.joda.time.DateTime;
import org.opensaml.saml2.core.Assertion;

import org.w3c.dom.Element;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

/**
 * @author Srinivasarao.Eadara
 *
 */
public class SamlAssertionData {
    public static SAMLCallback samlCallBack = null ;
    
	public static Element createAssertionRequest()throws Exception{
    	AssertionBean assertionBean = new AssertionBean() ;
    	
    	assertionBean.setIssuer("O=Social Security Administration,L=Baltimore,ST=Maryland,C=US");
    	assertionBean.setSubjectNameIDFormat(SamlConstants.NAMEID_FORMAT_EMAIL_ADDRESS);
    	List<AttributeStatementBean> attributeStatementList = new ArrayList(); 
    	
        AttributeStatementBean attrBean = new AttributeStatementBean();
        SubjectBean subjectBean = 
            new SubjectBean(
                "uid=joe,ou=people,ou=saml-demo,o=example.com", "www.example.com", SamlConstants.CONF_HOLDER_KEY
            );
        
        if (subjectBean != null) {
            attrBean.setSubject(subjectBean);
        }
        assertionBean.setSubjectBean(subjectBean);
        AttributeBean attributeBean = new AttributeBean();
        attributeBean.setQualifiedName("urn:oasis:names:tc:xspa:1.0:subject:subject-id");
        attributeBean.setAttributeValues(Collections.singletonList("MEGAHIT"));
        attrBean.setSamlAttributes(Collections.singletonList(attributeBean));
        attributeStatementList.add(attrBean);
        attributeBean = new AttributeBean();
        attributeBean.setQualifiedName("urn:oasis:names:tc:xspa:1.0:subject:organization");
        attributeBean.setAttributeValues(Collections.singletonList("Social Security Administration"));
        attrBean.setSamlAttributes(Collections.singletonList(attributeBean));
        attributeStatementList.add(attrBean);
        attributeBean = new AttributeBean();
        attributeBean.setQualifiedName("urn:oasis:names:tc:xspa:1.0:subject:organization-id");
        attributeBean.setAttributeValues(Collections.singletonList("2.16.840.1.113883.3.184.6.1"));
        attrBean.setSamlAttributes(Collections.singletonList(attributeBean));
        attributeStatementList.add(attrBean);
        attributeBean = new AttributeBean();
        attributeBean.setQualifiedName("urn:nhin:names:saml:homeCommunityId");
        attributeBean.setAttributeValues(Collections.singletonList("2.16.840.1.113883.3.184.6.1"));
        attrBean.setSamlAttributes(Collections.singletonList(attributeBean));
        attributeStatementList.add(attrBean);
        attributeBean = new AttributeBean();
        attributeBean.setQualifiedName("urn:oasis:names:tc:xacml:2.0:subject:role");
        
        attributeBean.setAttributeValues(Collections.singletonList("2.16.840.1.113883.3.184.6.1"));
        attrBean.setSamlAttributes(Collections.singletonList(attributeBean));
        attributeStatementList.add(attrBean);
        
        attributeBean = new AttributeBean();
        attributeBean.setQualifiedName("urn:oasis:names:tc:xspa:1.0:subject:purposeofuse");
        attributeBean.setAttributeValues(Collections.singletonList("2.16.840.1.113883.3.184.6.1"));
        attrBean.setSamlAttributes(Collections.singletonList(attributeBean));
        attributeStatementList.add(attrBean);
        attributeBean = new AttributeBean();
        attributeBean.setQualifiedName("urn:oasis:names:tc:xacml:2.0:resource:resource-id");
        attributeBean.setAttributeValues(Collections.singletonList("2.16.840.1.113883.3.184.6.1"));
        attrBean.setSamlAttributes(Collections.singletonList(attributeBean));
        attributeStatementList.add(attrBean);
        assertionBean.setAttrBean(attributeStatementList);
        
        
        
        //Authentication Statements
        AuthenticationStatementBean authenStateBean = new AuthenticationStatementBean() ;
        authenStateBean.setAuthenticationInstant(new DateTime());
        authenStateBean.setAuthenticationMethod("x509");
        authenStateBean.setSubject(subjectBean);
        assertionBean.setAuthenStateBean(Collections.singletonList(authenStateBean));
        
        //Authorization Statements 
        AuthDecisionStatementBean authzBean = new AuthDecisionStatementBean();
        ActionBean actionBean = new ActionBean();
        actionBean.setContents("Execute");
        actionBean.setActionNamespace("urn:oasis:names:tc:SAML:1.0:action:rwedc");
        authzBean.setActions(Collections.singletonList(actionBean));
        authzBean.setDecision(authzBean.getDecision().PERMIT);
        authzBean.setResource("https://nhinri2c23.aegis.net:443/RespondingGateway_Query_Service/DocQuery");
        authzBean.setSubject(subjectBean);
        assertionBean.setAuthzBean(Collections.singletonList(authzBean));
        OpenSamlBootStrap.initSamlEngine();
        SAMLAssertionWrapper assertion = new SAMLAssertionWrapper(assertionBean);
        String assertionString = assertion.assertionToString();
        System.out.println(assertionString);
        return assertion.getAssertionElement();
        //return loadXMLFrom(assertionString);
	
	}
	public static org.w3c.dom.Document loadXMLFrom(String xml)
    throws org.xml.sax.SAXException, java.io.IOException {
	    return loadXMLFrom(new java.io.ByteArrayInputStream(xml.getBytes()));
	}
	
	public static org.w3c.dom.Document loadXMLFrom(java.io.InputStream is) 
	    throws org.xml.sax.SAXException, java.io.IOException {
	    javax.xml.parsers.DocumentBuilderFactory factory =
	        javax.xml.parsers.DocumentBuilderFactory.newInstance();
	    factory.setNamespaceAware(true);
	    javax.xml.parsers.DocumentBuilder builder = null;
	    try {
	        builder = factory.newDocumentBuilder();
	    }
	    catch (javax.xml.parsers.ParserConfigurationException ex) {
	    }  
	    org.w3c.dom.Document doc = builder.parse(is);
	    is.close();
	    return doc;
	}
	
	public static AssertionBean getEvidenceInfo(){
		AssertionBean assertionBean = new AssertionBean() ;
    	
    	assertionBean.setIssuer("O=Social Security Administration,L=Baltimore,ST=Maryland,C=US");
    	assertionBean.setSubjectNameIDFormat(SamlConstants.NAMEID_FORMAT_EMAIL_ADDRESS);
    	
    	AttributeStatementBean attrBean = new AttributeStatementBean();
        AttributeBean attributeBean = new AttributeBean();
        attributeBean.setQualifiedName("AccessConsentPolicy");
        attributeBean.setNameFormat("http://www.hhs.gov/healthit/nhin");
        attrBean.setSamlAttributes(Collections.singletonList(attributeBean));
        
        attributeBean = new AttributeBean();
        attributeBean.setQualifiedName("InstanceAccessConsentPolicy");
        attributeBean.setNameFormat("http://www.hhs.gov/healthit/nhin");
        attributeBean.setAttributeValues(Collections.singletonList("urn:oid:2.16.840.1.113883.3.184.6.1.2222"));
        attrBean.setSamlAttributes(Collections.singletonList(attributeBean));
        assertionBean.setAttrBean(Collections.singletonList(attrBean));
        return assertionBean;
	}
	

}
